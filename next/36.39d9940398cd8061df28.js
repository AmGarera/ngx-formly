(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"/hGO":function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldWrapper } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-wrapper-panel\'</span>,\n  template: <span class="hljs-string">`\n    &lt;div class="card"&gt;\n      &lt;h3 class="card-header"&gt;{{ to.label }}&lt;/h3&gt;\n      &lt;div class="card-body"&gt;\n        &lt;ng-container #fieldComponent&gt;&lt;/ng-container&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  `</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> PanelWrapperComponent <span class="hljs-keyword">extends</span> FieldWrapper {\n}'},"374l":function(n,s,l){"use strict";l.r(s);var a=l("CcnG"),o=l("gIcY"),p=function(){function n(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"firstName",type:"input",templateOptions:{required:!0,type:"text",label:"First Name"}},{key:"address",wrappers:["panel"],templateOptions:{label:"Address"},fieldGroup:[{key:"town",type:"input",templateOptions:{required:!0,type:"text",label:"Town"}}]}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Nested Forms (fieldGroup wrapper)",description:"\n              This example demonstrates how to nest formly-form's using custom templates\n            ",component:p,files:[{file:"app.component.html",content:l("Ek3l"),filecontent:l("fKml")},{file:"app.component.ts",content:l("L38x"),filecontent:l("qR/c")},{file:"panel-wrapper.component.ts",content:l("/hGO"),filecontent:l("DtOQ")},{file:"app.module.ts",content:l("SJ2N"),filecontent:l("kUCw")}]}]},t=function(){return function(){}}(),r=l("NcP4"),m=l("AcC/"),i=l("htty"),c=l("5yjx"),d=l("bg4O"),u=l("1C3p"),f=l("aMyW"),h=l("cD0v"),g=l("FZbr"),y=l("jYRx"),j=l("YBPd"),b=l("mrSG"),w=function(n){function s(){return null!==n&&n.apply(this,arguments)||this}return Object(b.__extends)(s,n),s}(l("HkYz").c),k=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function C(n){return a["\u0275vid"](0,[a["\u0275qud"](402653184,1,{fieldComponent:0}),(n()(),a["\u0275eld"](1,0,null,null,4,"div",[["class","card"]],null,null,null,null,null)),(n()(),a["\u0275eld"](2,0,null,null,1,"h3",[["class","card-header"]],null,null,null,null,null)),(n()(),a["\u0275ted"](3,null,["",""])),(n()(),a["\u0275eld"](4,0,null,null,1,"div",[["class","card-body"]],null,null,null,null,null)),(n()(),a["\u0275eld"](5,16777216,[[1,3],["fieldComponent",1]],null,0,null,null,null,null,null,null,null))],null,function(n,s){n(s,3,0,s.component.to.label)})}function F(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-wrapper-panel",[],null,null,null,C,k)),a["\u0275did"](1,49152,null,0,w,[],null,null)],null,null)}var v=a["\u0275ccf"]("formly-wrapper-panel",w,F,{field:"field"},{},[]),x=l("pMnS"),M=l("4o01"),_=l("Dl9q"),N=l("UcnZ"),O=l("DAbo"),R=l("9Glx"),G=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function S(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,9,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,l){var o=!0,p=n.component;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),"ngSubmit"===s&&(o=!1!==p.submit()&&o),o},null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_bh"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,_.b,_.a)),a["\u0275prd"](512,null,N.a,N.a,[O.b,a.ComponentFactoryResolver,a.Injector]),a["\u0275did"](7,966656,null,0,R.a,[N.a,O.b,[8,null],[2,o.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),a["\u0275eld"](8,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["Submit"]))],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)})}function A(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,S,G)),a["\u0275did"](1,49152,null,0,p,[],null,null)],null,null)}var W=a["\u0275ccf"]("formly-app-example",p,A,{},{},[]),D=l("Ip0R"),q=l("M2Lx"),P=l("eDkP"),L=l("Fzqc"),E=l("v9Dh"),J=l("ZYjt"),U=l("Wf4p"),I=l("mVsa"),T=l("6LlJ"),B=l("F6kA"),Y=l("dWZg"),Z=l("lLAP"),z=l("4c35"),H=l("qAlS"),Q=l("La40"),V=l("SMsm"),K=l("UodH"),X=l("5QwG"),$=l("vqwi"),nn=l("WJWa"),sn=l("aD/X"),ln=l("rxDs"),an=l("bCbW"),on=l("7yie"),pn=l("xWhi"),en=l("owZ6"),tn=l("DwvE"),rn=l("XR12"),mn=l("Nsh5"),cn=l("8mMr"),dn=l("mqvi"),un=l("lhp3"),fn=l("izcw"),hn=l("z6f/"),gn=l("lYui"),yn=l("QcTH"),jn=l("82Si"),bn=l("cJUE"),wn=l("eqw4"),kn=l("nyVy"),Cn=l("7BuT"),Fn=function(){return function(){}}(),vn=l("ZYCi"),xn=l("cIcG");l.d(s,"ConfigModuleNgFactory",function(){return Mn});var Mn=a["\u0275cmf"](t,[],function(n){return a["\u0275mod"]([a["\u0275mpd"](512,a.ComponentFactoryResolver,a["\u0275CodegenComponentFactoryResolver"],[[8,[r.a,m.a,i.a,c.a,d.a,u.a,f.a,h.a,g.a,y.a,j.a,v,x.a,M.a,W]],[3,a.ComponentFactoryResolver],a.NgModuleRef]),a["\u0275mpd"](4608,D.NgLocalization,D.NgLocaleLocalization,[a.LOCALE_ID,[2,D["\u0275angular_packages_common_common_a"]]]),a["\u0275mpd"](4608,q.c,q.c,[]),a["\u0275mpd"](4608,P.c,P.c,[P.i,P.e,a.ComponentFactoryResolver,P.h,P.f,a.Injector,a.NgZone,D.DOCUMENT,L.b,[2,D.Location]]),a["\u0275mpd"](5120,P.j,P.k,[P.c]),a["\u0275mpd"](5120,E.b,E.c,[P.c]),a["\u0275mpd"](4608,J.HAMMER_GESTURE_CONFIG,U.c,[[2,U.g],[2,U.l]]),a["\u0275mpd"](5120,I.b,I.g,[P.c]),a["\u0275mpd"](4608,T.a,T.a,[]),a["\u0275mpd"](4608,B.a,B.a,[]),a["\u0275mpd"](4608,o.FormBuilder,o.FormBuilder,[]),a["\u0275mpd"](4608,o["\u0275angular_packages_forms_forms_j"],o["\u0275angular_packages_forms_forms_j"],[]),a["\u0275mpd"](4608,N.a,N.a,[O.b,a.ComponentFactoryResolver,a.Injector]),a["\u0275mpd"](1073742336,D.CommonModule,D.CommonModule,[]),a["\u0275mpd"](1073742336,Y.b,Y.b,[]),a["\u0275mpd"](1073742336,q.d,q.d,[]),a["\u0275mpd"](1073742336,Z.a,Z.a,[]),a["\u0275mpd"](1073742336,L.a,L.a,[]),a["\u0275mpd"](1073742336,z.g,z.g,[]),a["\u0275mpd"](1073742336,H.c,H.c,[]),a["\u0275mpd"](1073742336,P.g,P.g,[]),a["\u0275mpd"](1073742336,U.l,U.l,[[2,U.d],[2,J.HAMMER_LOADER]]),a["\u0275mpd"](1073742336,E.e,E.e,[]),a["\u0275mpd"](1073742336,U.v,U.v,[]),a["\u0275mpd"](1073742336,Q.j,Q.j,[]),a["\u0275mpd"](1073742336,I.e,I.e,[]),a["\u0275mpd"](1073742336,V.c,V.c,[]),a["\u0275mpd"](1073742336,K.c,K.c,[]),a["\u0275mpd"](1073742336,X.b,X.b,[]),a["\u0275mpd"](512,O.b,O.b,[]),a["\u0275mpd"](1024,O.a,function(n){return[{wrappers:[{name:"form-field",component:$.a}]},{types:[{name:"input",component:nn.a,wrappers:["form-field"]}]},{types:[{name:"textarea",component:sn.a,wrappers:["form-field"]}]},{types:[{name:"radio",component:ln.a,wrappers:["form-field"]}]},{types:[{name:"checkbox",component:an.a,wrappers:["form-field"]}]},{types:[{name:"multicheckbox",component:on.a,wrappers:["form-field"]}]},{types:[{name:"select",component:pn.a,wrappers:["form-field"]}]},{wrappers:[{name:"addons",component:en.a}],extensions:[{name:"addons",extension:{postPopulate:tn.a}}]},rn.b(n),{wrappers:[{name:"panel",component:w}]}]},[O.b]),a["\u0275mpd"](1073742336,rn.a,rn.a,[O.b,[2,O.a]]),a["\u0275mpd"](1073742336,mn.h,mn.h,[]),a["\u0275mpd"](1073742336,cn.b,cn.b,[]),a["\u0275mpd"](1073742336,dn.a,dn.a,[]),a["\u0275mpd"](1073742336,o["\u0275angular_packages_forms_forms_bc"],o["\u0275angular_packages_forms_forms_bc"],[]),a["\u0275mpd"](1073742336,o.ReactiveFormsModule,o.ReactiveFormsModule,[]),a["\u0275mpd"](1073742336,un.a,un.a,[]),a["\u0275mpd"](1073742336,fn.a,fn.a,[]),a["\u0275mpd"](1073742336,hn.a,hn.a,[]),a["\u0275mpd"](1073742336,gn.a,gn.a,[]),a["\u0275mpd"](1073742336,yn.a,yn.a,[]),a["\u0275mpd"](1073742336,jn.a,jn.a,[]),a["\u0275mpd"](1073742336,bn.a,bn.a,[]),a["\u0275mpd"](1073742336,wn.a,wn.a,[]),a["\u0275mpd"](1073742336,kn.a,kn.a,[]),a["\u0275mpd"](1073742336,Cn.a,Cn.a,[]),a["\u0275mpd"](1073742336,Fn,Fn,[]),a["\u0275mpd"](1073742336,vn.s,vn.s,[[2,vn.y],[2,vn.p]]),a["\u0275mpd"](1073742336,t,t,[]),a["\u0275mpd"](1024,vn.n,function(){return[[{path:"",component:xn.a,data:e}]]},[])])})},DtOQ:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-panel',\n  template: `\n    <div class=\"card\">\n      <h3 class=\"card-header\">{{ to.label }}</h3>\n      <div class=\"card-body\">\n        <ng-container #fieldComponent></ng-container>\n      </div>\n    </div>\n  `,\n})\nexport class PanelWrapperComponent extends FieldWrapper {\n}"},Ek3l:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},L38x:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'firstName\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n      templateOptions: {\n        required: <span class="hljs-literal">true</span>,\n        <span class="hljs-keyword">type</span>: <span class="hljs-string">\'text\'</span>,\n        label: <span class="hljs-string">\'First Name\'</span>,\n      },\n    },\n    {\n      key: <span class="hljs-string">\'address\'</span>,\n      wrappers: [<span class="hljs-string">\'panel\'</span>],\n      templateOptions: { label: <span class="hljs-string">\'Address\'</span> },\n      fieldGroup: [{\n        key: <span class="hljs-string">\'town\'</span>,\n        <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n        templateOptions: {\n          required: <span class="hljs-literal">true</span>,\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">\'text\'</span>,\n          label: <span class="hljs-string">\'Town\'</span>,\n        },\n      }],\n    },\n  ];\n\n  submit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.form.valid) {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n    }\n  }\n}\n'},SJ2N:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n\n<span class="hljs-keyword">import</span> { PanelWrapperComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./panel-wrapper.component\'</span>;\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      wrappers: [\n        { name: <span class="hljs-string">\'panel\'</span>, component: PanelWrapperComponent },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    PanelWrapperComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},fKml:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button">Submit</button>\n</form>\n'},kUCw:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { PanelWrapperComponent } from './panel-wrapper.component';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      wrappers: [\n        { name: 'panel', component: PanelWrapperComponent },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    PanelWrapperComponent,\n  ],\n})\nexport class AppModule { }\n"},"qR/c":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'firstName',\n      type: 'input',\n      templateOptions: {\n        required: true,\n        type: 'text',\n        label: 'First Name',\n      },\n    },\n    {\n      key: 'address',\n      wrappers: ['panel'],\n      templateOptions: { label: 'Address' },\n      fieldGroup: [{\n        key: 'town',\n        type: 'input',\n        templateOptions: {\n          required: true,\n          type: 'text',\n          label: 'Town',\n        },\n      }],\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"}}]);