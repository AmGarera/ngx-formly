(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"/krV":function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"definitions"</span>: {\n      <span class="hljs-string">"Thing"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"name"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-string">"Default name"</span>\n          }\n        }\n      }\n    },\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"listOfStrings"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A list of strings"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"bazinga"</span>\n        }\n      },\n      <span class="hljs-string">"multipleChoicesList"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A multiple choices list"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"enum"</span>: [\n            <span class="hljs-string">"foo"</span>,\n            <span class="hljs-string">"bar"</span>,\n            <span class="hljs-string">"fuzz"</span>,\n            <span class="hljs-string">"qux"</span>\n          ]\n        },\n        <span class="hljs-string">"uniqueItems"</span>: <span class="hljs-literal">true</span>\n      },\n      <span class="hljs-string">"fixedItemsList"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A list of fixed items"</span>,\n        <span class="hljs-string">"items"</span>: [\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"A string value"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"a boolean value"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"boolean"</span>\n          }\n        ],\n        <span class="hljs-string">"additionalItems"</span>: {\n          <span class="hljs-string">"title"</span>: <span class="hljs-string">"Additional item"</span>,\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>\n        }\n      },\n      <span class="hljs-string">"minItemsList"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A list with a minimal number of items"</span>,\n        <span class="hljs-string">"minItems"</span>: <span class="hljs-number">3</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/Thing"</span>\n        }\n      },\n      <span class="hljs-string">"defaultsAndMinItems"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"List and item level defaults"</span>,\n        <span class="hljs-string">"minItems"</span>: <span class="hljs-number">5</span>,\n        <span class="hljs-string">"default"</span>: [\n          <span class="hljs-string">"carp"</span>,\n          <span class="hljs-string">"trout"</span>,\n          <span class="hljs-string">"bream"</span>\n        ],\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"unidentified"</span>\n        }\n      },\n      <span class="hljs-string">"nestedList"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Nested list"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n          <span class="hljs-string">"title"</span>: <span class="hljs-string">"Inner list"</span>,\n          <span class="hljs-string">"items"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n          }\n        }\n      },\n      <span class="hljs-string">"unorderable"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Unorderable items"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n        }\n      },\n      <span class="hljs-string">"unremovable"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Unremovable items"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n        }\n      },\n      <span class="hljs-string">"noToolbar"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"No add, remove and order buttons"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n        }\n      },\n      <span class="hljs-string">"fixedNoToolbar"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Fixed array without buttons"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"items"</span>: [\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"A number"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-number">42</span>\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"A boolean"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"boolean"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-literal">false</span>\n          }\n        ],\n        <span class="hljs-string">"additionalItems"</span>: {\n          <span class="hljs-string">"title"</span>: <span class="hljs-string">"A string"</span>,\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"default"</span>: <span class="hljs-string">"lorem ipsum"</span>\n        }\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"listOfStrings"</span>: [\n      <span class="hljs-string">"foo"</span>,\n      <span class="hljs-string">"bar"</span>\n    ],\n    <span class="hljs-string">"multipleChoicesList"</span>: [\n      <span class="hljs-string">"foo"</span>,\n      <span class="hljs-string">"bar"</span>\n    ],\n    <span class="hljs-string">"fixedItemsList"</span>: [\n      <span class="hljs-string">"Some text"</span>,\n      <span class="hljs-literal">true</span>,\n      <span class="hljs-number">123</span>\n    ],\n    <span class="hljs-string">"nestedList"</span>: [\n      [\n        <span class="hljs-string">"lorem"</span>,\n        <span class="hljs-string">"ipsum"</span>\n      ],\n      [\n        <span class="hljs-string">"dolor"</span>\n      ]\n    ],\n    <span class="hljs-string">"unorderable"</span>: [\n      <span class="hljs-string">"one"</span>,\n      <span class="hljs-string">"two"</span>\n    ],\n    <span class="hljs-string">"unremovable"</span>: [\n      <span class="hljs-string">"one"</span>,\n      <span class="hljs-string">"two"</span>\n    ],\n    <span class="hljs-string">"noToolbar"</span>: [\n      <span class="hljs-string">"one"</span>,\n      <span class="hljs-string">"two"</span>\n    ],\n    <span class="hljs-string">"fixedNoToolbar"</span>: [\n      <span class="hljs-number">42</span>,\n      <span class="hljs-literal">true</span>,\n      <span class="hljs-string">"additional item one"</span>,\n      <span class="hljs-string">"additional item two"</span>\n    ]\n  }\n}'},"00py":function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Extending"</span>,\n    <span class="hljs-string">"definitions"</span>: {\n      <span class="hljs-string">"address"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"street_address"</span>: {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Address"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>\n          },\n          <span class="hljs-string">"city"</span>: {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"City"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>\n          },\n          <span class="hljs-string">"state"</span>: {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"State"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>\n          }\n        },\n        <span class="hljs-string">"required"</span>: [\n          <span class="hljs-string">"street_address"</span>,\n          <span class="hljs-string">"city"</span>,\n          <span class="hljs-string">"state"</span>\n        ]\n      }\n    },\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"billing_address"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Billing Address"</span>,\n        <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/address"</span>\n      },\n      <span class="hljs-string">"shipping_address"</span>: {\n        <span class="hljs-string">"allOf"</span>: [\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Shipping Address"</span>,\n            <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/address"</span>\n          },\n          {\n            <span class="hljs-string">"properties"</span>: {\n              <span class="hljs-string">"type"</span>: {\n                <span class="hljs-string">"title"</span>: <span class="hljs-string">"Housing type"</span>,\n                <span class="hljs-string">"enum"</span>: [\n                  <span class="hljs-string">"Residential"</span>,\n                  <span class="hljs-string">"Business"</span>\n                ]\n              }\n            },\n            <span class="hljs-string">"required"</span>: [\n              <span class="hljs-string">"type"</span>\n            ]\n          }\n        ]\n      }\n    }\n  }\n}'},"10K4":function(s,n){s.exports='\n<div style="margin-bottom: 20px;">\n  <button *ngFor="let example of examples"\n  (click)="loadExample(example)"\n  class="btn" [class.btn-primary]="type === example">\n    {{ example }}\n  </button>\n</div>\n\n<form [formGroup]="form" (ngSubmit)="submit()" *ngIf="fields">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button" [disabled]="!form.valid">Submit</button>\n</form>\n'},"7wk9":function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Null field example"</span>,\n    <span class="hljs-string">"description"</span>: <span class="hljs-string">"A short form with a null field"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"required"</span>: [\n      <span class="hljs-string">"firstName"</span>\n    ],\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"helpText"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A null field"</span>,\n        <span class="hljs-string">"description"</span>: <span class="hljs-string">"Null fields like this are great for adding extra information"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"null"</span>\n      },\n      <span class="hljs-string">"firstName"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"A regular string field"</span>,\n        <span class="hljs-string">"default"</span>: <span class="hljs-string">"Chuck"</span>\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"firstName"</span>: <span class="hljs-string">"Chuck"</span>\n  }\n}'},"9pS7":function(s,n){s.exports='{\n  "schema": {\n    "type": "object",\n    "oneOf": [\n      {\n        "title": "Option 1",\n        "properties": {\n          "lorem": {\n            "title": "lorem",\n            "type": "string"\n          }\n        },\n        "required": [\n          "lorem"\n        ]\n      },\n      {\n        "title": "Option 2",\n        "properties": {\n          "ipsum": {\n            "title": "ipsum",\n            "type": "string"\n          }\n        },\n        "required": [\n          "ipsum"\n        ]\n      }\n    ]\n  },\n  "model": {}\n}'},"9q2f":function(s,n){s.exports='import { Component } from \'@angular/core\';\nimport { FieldType } from \'@ngx-formly/core\';\n\n@Component({\n  selector: \'formly-multi-schema-type\',\n  template: `\n    <div class="card mb-3">\n      <div class="card-body">\n        <legend *ngIf="to.label">{{ to.label }}</legend>\n        <p *ngIf="to.description">{{ to.description }}</p>\n        <div class="alert alert-danger" role="alert" *ngIf="showError && formControl.errors">\n          <formly-validation-message [field]="field"></formly-validation-message>\n        </div>\n        <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>\n      </div>\n    </div>\n  `,\n})\nexport class MultiSchemaTypeComponent extends FieldType {}\n'},A1RU:function(s,n){s.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n<span class="hljs-keyword">import</span> { HttpClientModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common/http\'</span>;\n<span class="hljs-keyword">import</span> { MatMenuModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/material/menu\'</span>;\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n<span class="hljs-keyword">import</span> { ArrayTypeComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./array.type\'</span>;\n<span class="hljs-keyword">import</span> { ObjectTypeComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./object.type\'</span>;\n<span class="hljs-keyword">import</span> { MultiSchemaTypeComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./multischema.type\'</span>;\n<span class="hljs-keyword">import</span> { NullTypeComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./null.type\'</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">minItemsValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should NOT have fewer than <span class="hljs-subst">${field.templateOptions.minItems}</span> items`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxItemsValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should NOT have more than <span class="hljs-subst">${field.templateOptions.maxItems}</span> items`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">minlengthValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should NOT be shorter than <span class="hljs-subst">${field.templateOptions.minLength}</span> characters`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxlengthValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should NOT be longer than <span class="hljs-subst">${field.templateOptions.maxLength}</span> characters`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">minValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should be &gt;= <span class="hljs-subst">${field.templateOptions.min}</span>`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">maxValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should be &lt;= <span class="hljs-subst">${field.templateOptions.max}</span>`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">multipleOfValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should be multiple of <span class="hljs-subst">${field.templateOptions.step}</span>`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">exclusiveMinimumValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should be &gt; <span class="hljs-subst">${field.templateOptions.step}</span>`</span>;\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">exclusiveMaximumValidationMessage</span>(<span class="hljs-params">err, field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`should be &lt; <span class="hljs-subst">${field.templateOptions.step}</span>`</span>;\n}\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    HttpClientModule,\n    MatMenuModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n        { name: <span class="hljs-string">\'null\'</span>, message: <span class="hljs-string">\'should be null\'</span> },\n        { name: <span class="hljs-string">\'minlength\'</span>, message: minlengthValidationMessage },\n        { name: <span class="hljs-string">\'maxlength\'</span>, message: maxlengthValidationMessage },\n        { name: <span class="hljs-string">\'min\'</span>, message: minValidationMessage },\n        { name: <span class="hljs-string">\'max\'</span>, message: maxValidationMessage },\n        { name: <span class="hljs-string">\'multipleOf\'</span>, message: multipleOfValidationMessage },\n        { name: <span class="hljs-string">\'exclusiveMinimum\'</span>, message: exclusiveMinimumValidationMessage },\n        { name: <span class="hljs-string">\'exclusiveMaximum\'</span>, message: exclusiveMaximumValidationMessage },\n        { name: <span class="hljs-string">\'minItems\'</span>, message: minItemsValidationMessage },\n        { name: <span class="hljs-string">\'maxItems\'</span>, message: maxItemsValidationMessage },\n        { name: <span class="hljs-string">\'uniqueItems\'</span>, message: <span class="hljs-string">\'should NOT have duplicate items\'</span> },\n      ],\n      types: [\n        { name: <span class="hljs-string">\'string\'</span>, <span class="hljs-keyword">extends</span>: <span class="hljs-string">\'input\'</span> },\n        {\n          name: <span class="hljs-string">\'number\'</span>,\n          <span class="hljs-keyword">extends</span>: <span class="hljs-string">\'input\'</span>,\n          defaultOptions: {\n            templateOptions: {\n              <span class="hljs-keyword">type</span>: <span class="hljs-string">\'number\'</span>,\n            },\n          },\n        },\n        {\n          name: <span class="hljs-string">\'integer\'</span>,\n          <span class="hljs-keyword">extends</span>: <span class="hljs-string">\'input\'</span>,\n          defaultOptions: {\n            templateOptions: {\n              <span class="hljs-keyword">type</span>: <span class="hljs-string">\'number\'</span>,\n            },\n          },\n        },\n        { name: <span class="hljs-string">\'boolean\'</span>, <span class="hljs-keyword">extends</span>: <span class="hljs-string">\'checkbox\'</span> },\n        { name: <span class="hljs-string">\'enum\'</span>, <span class="hljs-keyword">extends</span>: <span class="hljs-string">\'select\'</span> },\n        { name: <span class="hljs-string">\'null\'</span>, component: NullTypeComponent, wrappers: [<span class="hljs-string">\'form-field\'</span>] },\n        { name: <span class="hljs-string">\'array\'</span>, component: ArrayTypeComponent },\n        { name: <span class="hljs-string">\'object\'</span>, component: ObjectTypeComponent },\n        { name: <span class="hljs-string">\'multischema\'</span>, component: MultiSchemaTypeComponent },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    ArrayTypeComponent,\n    ObjectTypeComponent,\n    MultiSchemaTypeComponent,\n    NullTypeComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},A1V9:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"A registration form"</span>,\n    <span class="hljs-string">"description"</span>: <span class="hljs-string">"A simple form example."</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"required"</span>: [\n      <span class="hljs-string">"firstName"</span>,\n      <span class="hljs-string">"lastName"</span>\n    ],\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"firstName"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"First name"</span>,\n        <span class="hljs-string">"default"</span>: <span class="hljs-string">"Chuck"</span>\n      },\n      <span class="hljs-string">"lastName"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Last name"</span>\n      },\n      <span class="hljs-string">"age"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Age"</span>\n      },\n      <span class="hljs-string">"bio"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Bio"</span>\n      },\n      <span class="hljs-string">"password"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Password"</span>,\n        <span class="hljs-string">"minLength"</span>: <span class="hljs-number">3</span>\n      },\n      <span class="hljs-string">"telephone"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Telephone"</span>,\n        <span class="hljs-string">"minLength"</span>: <span class="hljs-number">10</span>\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"lastName"</span>: <span class="hljs-string">"Norris"</span>,\n    <span class="hljs-string">"age"</span>: <span class="hljs-number">75</span>,\n    <span class="hljs-string">"bio"</span>: <span class="hljs-string">"Roundhouse kicking asses since 1940"</span>,\n    <span class="hljs-string">"password"</span>: <span class="hljs-string">"noneed"</span>\n  }\n}'},BqOT:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldType } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-null-type\'</span>,\n  template: <span class="hljs-string">\'\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> NullTypeComponent <span class="hljs-keyword">extends</span> FieldType {}\n'},DVcM:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldType } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-object-type\'</span>,\n  template: <span class="hljs-string">`\n    &lt;div class="mb-3"&gt;\n      &lt;legend *ngIf="to.label"&gt;{{ to.label }}&lt;/legend&gt;\n      &lt;p *ngIf="to.description"&gt;{{ to.description }}&lt;/p&gt;\n      &lt;div class="alert alert-danger" role="alert" *ngIf="showError &amp;&amp; formControl.errors"&gt;\n        &lt;formly-validation-message [field]="field"&gt;&lt;/formly-validation-message&gt;\n      &lt;/div&gt;\n      &lt;formly-field *ngFor="let f of field.fieldGroup" [field]="f"&gt;&lt;/formly-field&gt;\n    &lt;/div&gt;\n  `</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> ObjectTypeComponent <span class="hljs-keyword">extends</span> FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n'},FqsT:function(s,n){s.exports='{\n  "schema": {\n    "title": "A registration form",\n    "description": "A simple form example.",\n    "type": "object",\n    "required": [\n      "firstName",\n      "lastName"\n    ],\n    "properties": {\n      "firstName": {\n        "type": "string",\n        "title": "First name",\n        "default": "Chuck"\n      },\n      "lastName": {\n        "type": "string",\n        "title": "Last name"\n      },\n      "age": {\n        "type": "integer",\n        "title": "Age"\n      },\n      "bio": {\n        "type": "string",\n        "title": "Bio"\n      },\n      "password": {\n        "type": "string",\n        "title": "Password",\n        "minLength": 3\n      },\n      "telephone": {\n        "type": "string",\n        "title": "Telephone",\n        "minLength": 10\n      }\n    }\n  },\n  "model": {\n    "lastName": "Norris",\n    "age": 75,\n    "bio": "Roundhouse kicking asses since 1940",\n    "password": "noneed"\n  }\n}'},HBru:function(s,n){s.exports='import { Component } from \'@angular/core\';\nimport { FieldType } from \'@ngx-formly/core\';\n\n@Component({\n  selector: \'formly-object-type\',\n  template: `\n    <div class="mb-3">\n      <legend *ngIf="to.label">{{ to.label }}</legend>\n      <p *ngIf="to.description">{{ to.description }}</p>\n      <div class="alert alert-danger" role="alert" *ngIf="showError && formControl.errors">\n        <formly-validation-message [field]="field"></formly-validation-message>\n      </div>\n      <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>\n    </div>\n  `,\n})\nexport class ObjectTypeComponent extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n'},HtMo:function(s,n){s.exports='{\n  "schema": {\n    "title": "Schema dependencies",\n    "description": "These samples are best viewed without live validation.",\n    "type": "object",\n    "properties": {\n      "simple": {\n        "src": "https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies",\n        "title": "Simple",\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "title": "Name"\n          },\n          "credit_card": {\n            "type": "number",\n            "title": "Credit card"\n          }\n        },\n        "required": [\n          "name"\n        ],\n        "dependencies": {\n          "credit_card": {\n            "properties": {\n              "billing_address": {\n                "type": "string",\n                "title": "Billing address"\n              }\n            },\n            "required": [\n              "billing_address"\n            ]\n          }\n        }\n      }\n    }\n  },\n  "model": {\n    "simple": {\n      "name": "Randy"\n    }\n  }\n}'},JOvV:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"A registration form (nullable)"</span>,\n    <span class="hljs-string">"description"</span>: <span class="hljs-string">"A simple form example using nullable types"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"required"</span>: [\n      <span class="hljs-string">"fullName"</span>\n    ],\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"fullName"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"First name"</span>,\n        <span class="hljs-string">"default"</span>: <span class="hljs-string">"Chuck"</span>\n      },\n      <span class="hljs-string">"age"</span>: {\n        <span class="hljs-string">"type"</span>: [\n          <span class="hljs-string">"integer"</span>,\n          <span class="hljs-string">"null"</span>\n        ],\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Age"</span>\n      },\n      <span class="hljs-string">"bio"</span>: {\n        <span class="hljs-string">"type"</span>: [\n          <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"null"</span>\n        ],\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Bio"</span>,\n        <span class="hljs-string">"widget"</span>: {\n          <span class="hljs-string">"formlyConfig"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"textarea"</span>,\n            <span class="hljs-string">"templateOptions"</span>: {\n              <span class="hljs-string">"placeholder"</span>: <span class="hljs-string">"Leaving this field empty will cause formData property to be `null`"</span>,\n              <span class="hljs-string">"rows"</span>: <span class="hljs-number">5</span>\n            }\n          }\n        }\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"fullName"</span>: <span class="hljs-string">"Chuck"</span>,\n    <span class="hljs-string">"age"</span>: <span class="hljs-number">75</span>,\n    <span class="hljs-string">"bio"</span>: <span class="hljs-literal">null</span>\n  }\n}'},KHZg:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"age"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Age"</span>\n      }\n    },\n    <span class="hljs-string">"anyOf"</span>: [\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"First method of identification"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"firstName"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"First name"</span>,\n            <span class="hljs-string">"default"</span>: <span class="hljs-string">"Chuck"</span>\n          },\n          <span class="hljs-string">"lastName"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Last name"</span>\n          }\n        }\n      },\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Second method of identification"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"idCode"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"ID code"</span>\n          }\n        }\n      }\n    ]\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"firstName"</span>: <span class="hljs-string">"Chuck"</span>\n  }\n}'},LeSW:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldType } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-multi-schema-type\'</span>,\n  template: <span class="hljs-string">`\n    &lt;div class="card mb-3"&gt;\n      &lt;div class="card-body"&gt;\n        &lt;legend *ngIf="to.label"&gt;{{ to.label }}&lt;/legend&gt;\n        &lt;p *ngIf="to.description"&gt;{{ to.description }}&lt;/p&gt;\n        &lt;div class="alert alert-danger" role="alert" *ngIf="showError &amp;&amp; formControl.errors"&gt;\n          &lt;formly-validation-message [field]="field"&gt;&lt;/formly-validation-message&gt;\n        &lt;/div&gt;\n        &lt;formly-field *ngFor="let f of field.fieldGroup" [field]="f"&gt;&lt;/formly-field&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  `</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> MultiSchemaTypeComponent <span class="hljs-keyword">extends</span> FieldType {}\n'},LmA5:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Number fields &amp; widgets"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"number"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Number"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>\n      },\n      <span class="hljs-string">"integer"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Integer"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span>\n      },\n      <span class="hljs-string">"numberEnum"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Number enum"</span>,\n        <span class="hljs-string">"enum"</span>: [\n          <span class="hljs-number">1</span>,\n          <span class="hljs-number">2</span>,\n          <span class="hljs-number">3</span>\n        ]\n      },\n      <span class="hljs-string">"numberEnumRadio"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Number enum"</span>,\n        <span class="hljs-string">"enum"</span>: [\n          <span class="hljs-number">1</span>,\n          <span class="hljs-number">2</span>,\n          <span class="hljs-number">3</span>\n        ]\n      },\n      <span class="hljs-string">"integerRange"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Integer range"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span>,\n        <span class="hljs-string">"minimum"</span>: <span class="hljs-number">42</span>,\n        <span class="hljs-string">"maximum"</span>: <span class="hljs-number">100</span>\n      },\n      <span class="hljs-string">"integerRangeSteps"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Integer range (by 10)"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span>,\n        <span class="hljs-string">"minimum"</span>: <span class="hljs-number">50</span>,\n        <span class="hljs-string">"maximum"</span>: <span class="hljs-number">100</span>,\n        <span class="hljs-string">"multipleOf"</span>: <span class="hljs-number">10</span>\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"number"</span>: <span class="hljs-number">3.14</span>,\n    <span class="hljs-string">"integer"</span>: <span class="hljs-number">42</span>,\n    <span class="hljs-string">"numberEnum"</span>: <span class="hljs-number">2</span>,\n    <span class="hljs-string">"integerRange"</span>: <span class="hljs-number">42</span>,\n    <span class="hljs-string">"integerRangeSteps"</span>: <span class="hljs-number">80</span>\n  }\n}'},NKmw:function(s,n){s.exports='{\n  "schema": {\n    "title": "Select alternatives",\n    "type": "object",\n    "properties": {\n      "select1": {\n        "type": "string",\n        "title": "Select 1: Enum array",\n        "enum": [\n          "Option 1",\n          "Option 2",\n          "Option 3"\n        ]\n      },\n      "select2": {\n        "type": "string",\n        "title": "Select 2: AnyOf/OneOf array with enum",\n        "anyOf": [\n          {\n            "title": "Option 1",\n            "enum": [\n              "option1"\n            ]\n          },\n          {\n            "title": "Option 2",\n            "enum": [\n              "option2"\n            ]\n          },\n          {\n            "title": "Option 3",\n            "enum": [\n              "option3"\n            ]\n          }\n        ]\n      },\n      "select3": {\n        "type": "string",\n        "title": "Select 3: AnyOf/OneOf array with const",\n        "oneOf": [\n          {\n            "title": "Option 1",\n            "const": "option1"\n          },\n          {\n            "title": "Option 2",\n            "const": "option2"\n          },\n          {\n            "title": "Option 3",\n            "const": "option3"\n          }\n        ]\n      },\n      "select4": {\n        "type": "string",\n        "title": "Select 4: Radio button",\n        "enum": [\n          "Option 1",\n          "Option 2",\n          "Option 3"\n        ],\n        "widget": {\n          "formlyConfig": {\n            "type": "radio"\n          }\n        }\n      },\n      "select5": {\n        "type": "string",\n        "title": "Select 5: with widget attr",\n        "widget": {\n          "formlyConfig": {\n            "type": "enum",\n            "templateOptions": {\n              "options": [\n                {\n                  "value": "1",\n                  "label": "option 1"\n                },\n                {\n                  "value": "2",\n                  "label": "option 2"\n                },\n                {\n                  "value": "3",\n                  "label": "option 3"\n                }\n              ]\n            }\n          }\n        }\n      },\n      "select6": {\n        "type": "array",\n        "title": "Select 6: Multiselect",\n        "uniqueItems": true,\n        "items": {\n          "type": "string",\n          "enum": [\n            "Option 1",\n            "Option 2",\n            "Option 3"\n          ]\n        }\n      }\n    }\n  },\n  "model": {}\n}'},OnUj:function(s,n){s.exports='{\n  "schema": {\n    "title": "A list of tasks",\n    "type": "object",\n    "required": [\n      "title"\n    ],\n    "properties": {\n      "title": {\n        "type": "string",\n        "title": "Task list title"\n      },\n      "tasks": {\n        "type": "array",\n        "title": "Tasks",\n        "items": {\n          "type": "object",\n          "required": [\n            "title"\n          ],\n          "properties": {\n            "title": {\n              "type": "string",\n              "title": "Title",\n              "description": "A sample title"\n            },\n            "details": {\n              "type": "string",\n              "title": "Task details",\n              "description": "Enter the task details"\n            },\n            "done": {\n              "type": "boolean",\n              "title": "Done?",\n              "default": false\n            }\n          }\n        }\n      }\n    }\n  },\n  "model": {\n    "title": "My current tasks",\n    "tasks": [\n      {\n        "title": "My first task",\n        "details": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n        "done": true\n      },\n      {\n        "title": "My second task",\n        "details": "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur",\n        "done": false\n      }\n    ]\n  }\n}'},P5fe:function(s,n){s.exports="import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-null-type',\n  template: '',\n})\nexport class NullTypeComponent extends FieldType {}\n"},QsEr:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"oneOf"</span>: [\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 1"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"lorem"</span>: {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"lorem"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>\n          }\n        },\n        <span class="hljs-string">"required"</span>: [\n          <span class="hljs-string">"lorem"</span>\n        ]\n      },\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 2"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"ipsum"</span>: {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"ipsum"</span>,\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>\n          }\n        },\n        <span class="hljs-string">"required"</span>: [\n          <span class="hljs-string">"ipsum"</span>\n        ]\n      }\n    ]\n  },\n  <span class="hljs-string">"model"</span>: {}\n}'},"XG/j":function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select alternatives"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"select1"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 1: Enum array"</span>,\n        <span class="hljs-string">"enum"</span>: [\n          <span class="hljs-string">"Option 1"</span>,\n          <span class="hljs-string">"Option 2"</span>,\n          <span class="hljs-string">"Option 3"</span>\n        ]\n      },\n      <span class="hljs-string">"select2"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 2: AnyOf/OneOf array with enum"</span>,\n        <span class="hljs-string">"anyOf"</span>: [\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 1"</span>,\n            <span class="hljs-string">"enum"</span>: [\n              <span class="hljs-string">"option1"</span>\n            ]\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 2"</span>,\n            <span class="hljs-string">"enum"</span>: [\n              <span class="hljs-string">"option2"</span>\n            ]\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 3"</span>,\n            <span class="hljs-string">"enum"</span>: [\n              <span class="hljs-string">"option3"</span>\n            ]\n          }\n        ]\n      },\n      <span class="hljs-string">"select3"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 3: AnyOf/OneOf array with const"</span>,\n        <span class="hljs-string">"oneOf"</span>: [\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 1"</span>,\n            <span class="hljs-string">"const"</span>: <span class="hljs-string">"option1"</span>\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 2"</span>,\n            <span class="hljs-string">"const"</span>: <span class="hljs-string">"option2"</span>\n          },\n          {\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Option 3"</span>,\n            <span class="hljs-string">"const"</span>: <span class="hljs-string">"option3"</span>\n          }\n        ]\n      },\n      <span class="hljs-string">"select4"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 4: Radio button"</span>,\n        <span class="hljs-string">"enum"</span>: [\n          <span class="hljs-string">"Option 1"</span>,\n          <span class="hljs-string">"Option 2"</span>,\n          <span class="hljs-string">"Option 3"</span>\n        ],\n        <span class="hljs-string">"widget"</span>: {\n          <span class="hljs-string">"formlyConfig"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"radio"</span>\n          }\n        }\n      },\n      <span class="hljs-string">"select5"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 5: with widget attr"</span>,\n        <span class="hljs-string">"widget"</span>: {\n          <span class="hljs-string">"formlyConfig"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"enum"</span>,\n            <span class="hljs-string">"templateOptions"</span>: {\n              <span class="hljs-string">"options"</span>: [\n                {\n                  <span class="hljs-string">"value"</span>: <span class="hljs-string">"1"</span>,\n                  <span class="hljs-string">"label"</span>: <span class="hljs-string">"option 1"</span>\n                },\n                {\n                  <span class="hljs-string">"value"</span>: <span class="hljs-string">"2"</span>,\n                  <span class="hljs-string">"label"</span>: <span class="hljs-string">"option 2"</span>\n                },\n                {\n                  <span class="hljs-string">"value"</span>: <span class="hljs-string">"3"</span>,\n                  <span class="hljs-string">"label"</span>: <span class="hljs-string">"option 3"</span>\n                }\n              ]\n            }\n          }\n        }\n      },\n      <span class="hljs-string">"select6"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Select 6: Multiselect"</span>,\n        <span class="hljs-string">"uniqueItems"</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n          <span class="hljs-string">"enum"</span>: [\n            <span class="hljs-string">"Option 1"</span>,\n            <span class="hljs-string">"Option 2"</span>,\n            <span class="hljs-string">"Option 3"</span>\n          ]\n        }\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {}\n}'},YCm9:function(s,n){s.exports='{\n  "schema": {\n    "definitions": {\n      "address": {\n        "type": "object",\n        "properties": {\n          "street_address": {\n            "type": "string",\n            "title": "Street address"\n          },\n          "city": {\n            "type": "string",\n            "title": "City"\n          },\n          "state": {\n            "type": "string",\n            "title": "State"\n          }\n        },\n        "required": [\n          "street_address",\n          "city",\n          "state"\n        ]\n      },\n      "node": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "title": "Name"\n          },\n          "children": {\n            "type": "array",\n            "items": {\n              "$ref": "#/definitions/node"\n            }\n          }\n        }\n      }\n    },\n    "type": "object",\n    "properties": {\n      "billing_address": {\n        "title": "Billing address",\n        "$ref": "#/definitions/address"\n      },\n      "shipping_address": {\n        "title": "Shipping address",\n        "$ref": "#/definitions/address"\n      },\n      "tree": {\n        "title": "Recursive references",\n        "$ref": "#/definitions/node"\n      }\n    }\n  },\n  "model": {\n    "billing_address": {\n      "street_address": "21, Jump Street",\n      "city": "Babel",\n      "state": "Neverland"\n    },\n    "shipping_address": {\n      "street_address": "221B, Baker Street",\n      "city": "London",\n      "state": "N/A"\n    },\n    "tree": {\n      "name": "root",\n      "children": [\n        {\n          "name": "leaf"\n        }\n      ]\n    }\n  }\n}'},b7ha:function(s,n){s.exports='{\n  "schema": {\n    "title": "A registration form (nullable)",\n    "description": "A simple form example using nullable types",\n    "type": "object",\n    "required": [\n      "fullName"\n    ],\n    "properties": {\n      "fullName": {\n        "type": "string",\n        "title": "First name",\n        "default": "Chuck"\n      },\n      "age": {\n        "type": [\n          "integer",\n          "null"\n        ],\n        "title": "Age"\n      },\n      "bio": {\n        "type": [\n          "string",\n          "null"\n        ],\n        "title": "Bio",\n        "widget": {\n          "formlyConfig": {\n            "type": "textarea",\n            "templateOptions": {\n              "placeholder": "Leaving this field empty will cause formData property to be `null`",\n              "rows": 5\n            }\n          }\n        }\n      }\n    }\n  },\n  "model": {\n    "fullName": "Chuck",\n    "age": 75,\n    "bio": null\n  }\n}'},bsCt:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"A list of tasks"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"required"</span>: [\n      <span class="hljs-string">"title"</span>\n    ],\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"title"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Task list title"</span>\n      },\n      <span class="hljs-string">"tasks"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Tasks"</span>,\n        <span class="hljs-string">"items"</span>: {\n          <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n          <span class="hljs-string">"required"</span>: [\n            <span class="hljs-string">"title"</span>\n          ],\n          <span class="hljs-string">"properties"</span>: {\n            <span class="hljs-string">"title"</span>: {\n              <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n              <span class="hljs-string">"title"</span>: <span class="hljs-string">"Title"</span>,\n              <span class="hljs-string">"description"</span>: <span class="hljs-string">"A sample title"</span>\n            },\n            <span class="hljs-string">"details"</span>: {\n              <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n              <span class="hljs-string">"title"</span>: <span class="hljs-string">"Task details"</span>,\n              <span class="hljs-string">"description"</span>: <span class="hljs-string">"Enter the task details"</span>\n            },\n            <span class="hljs-string">"done"</span>: {\n              <span class="hljs-string">"type"</span>: <span class="hljs-string">"boolean"</span>,\n              <span class="hljs-string">"title"</span>: <span class="hljs-string">"Done?"</span>,\n              <span class="hljs-string">"default"</span>: <span class="hljs-literal">false</span>\n            }\n          }\n        }\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"My current tasks"</span>,\n    <span class="hljs-string">"tasks"</span>: [\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"My first task"</span>,\n        <span class="hljs-string">"details"</span>: <span class="hljs-string">"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."</span>,\n        <span class="hljs-string">"done"</span>: <span class="hljs-literal">true</span>\n      },\n      {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"My second task"</span>,\n        <span class="hljs-string">"details"</span>: <span class="hljs-string">"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur"</span>,\n        <span class="hljs-string">"done"</span>: <span class="hljs-literal">false</span>\n      }\n    ]\n  }\n}'},"cig/":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldArrayType } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-array-type\'</span>,\n  template: <span class="hljs-string">`\n  &lt;div class="mb-3"&gt;\n    &lt;legend *ngIf="to.label"&gt;{{ to.label }}&lt;/legend&gt;\n    &lt;p *ngIf="to.description"&gt;{{ to.description }}&lt;/p&gt;\n\n    &lt;div class="alert alert-danger" role="alert" *ngIf="showError &amp;&amp; formControl.errors"&gt;\n      &lt;formly-validation-message [field]="field"&gt;&lt;/formly-validation-message&gt;\n    &lt;/div&gt;\n\n    &lt;div *ngFor="let field of field.fieldGroup;let i = index;" class="row"&gt;\n      &lt;formly-field class="col-10" [field]="field"&gt;&lt;/formly-field&gt;\n      &lt;div class="col-2 text-right"&gt;\n        &lt;button class="btn btn-danger" type="button" (click)="remove(i)"&gt;-&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class="d-flex flex-row-reverse"&gt;\n      &lt;button class="btn btn-primary" type="button" (click)="add()"&gt;+&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  `</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> ArrayTypeComponent <span class="hljs-keyword">extends</span> FieldArrayType {}\n'},dagV:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyJsonschema } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core/json-schema\'</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common/http\'</span>;\n<span class="hljs-keyword">import</span> { tap } <span class="hljs-keyword">from</span> <span class="hljs-string">\'rxjs/operators\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form: FormGroup;\n  model: <span class="hljs-built_in">any</span>;\n  options: FormlyFormOptions;\n  fields: FormlyFieldConfig[];\n\n  <span class="hljs-keyword">type</span>: <span class="hljs-built_in">string</span>;\n  examples = [\n    <span class="hljs-string">\'simple\'</span>,\n    <span class="hljs-string">\'nested\'</span>,\n    <span class="hljs-string">\'arrays\'</span>,\n    <span class="hljs-string">\'numbers\'</span>,\n    <span class="hljs-string">\'references\'</span>,\n    <span class="hljs-string">\'schema_dependencies\'</span>,\n    <span class="hljs-string">\'null_field\'</span>,\n    <span class="hljs-string">\'nullable\'</span>,\n    <span class="hljs-string">\'allOf\'</span>,\n    <span class="hljs-string">\'anyOf\'</span>,\n    <span class="hljs-string">\'oneOf\'</span>,\n    <span class="hljs-string">\'select_alternatives\'</span>,\n  ];\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">private</span> formlyJsonschema: FormlyJsonschema,\n    <span class="hljs-keyword">private</span> http: HttpClient,\n  </span>) {\n    <span class="hljs-keyword">this</span>.loadExample(<span class="hljs-keyword">this</span>.examples[<span class="hljs-number">0</span>]);\n  }\n\n  loadExample(<span class="hljs-keyword">type</span>: <span class="hljs-built_in">string</span>) {\n    <span class="hljs-keyword">this</span>.http.get&lt;<span class="hljs-built_in">any</span>&gt;(<span class="hljs-string">`assets/json-schema/<span class="hljs-subst">${type}</span>_json`</span>).pipe(\n      tap(<span class="hljs-function">(<span class="hljs-params">{ schema, model }</span>) =&gt;</span> {\n        <span class="hljs-keyword">this</span>.type = <span class="hljs-keyword">type</span>;\n        <span class="hljs-keyword">this</span>.form = <span class="hljs-keyword">new</span> FormGroup({});\n        <span class="hljs-keyword">this</span>.options = {};\n        <span class="hljs-keyword">this</span>.fields = [<span class="hljs-keyword">this</span>.formlyJsonschema.toFieldConfig(schema)];\n        <span class="hljs-keyword">this</span>.model = model;\n      }),\n    ).subscribe();\n  }\n\n  submit() {\n    alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n  }\n}\n'},e0q4:function(s,n){s.exports='{\n  "schema": {\n    "title": "Null field example",\n    "description": "A short form with a null field",\n    "type": "object",\n    "required": [\n      "firstName"\n    ],\n    "properties": {\n      "helpText": {\n        "title": "A null field",\n        "description": "Null fields like this are great for adding extra information",\n        "type": "null"\n      },\n      "firstName": {\n        "type": "string",\n        "title": "A regular string field",\n        "default": "Chuck"\n      }\n    }\n  },\n  "model": {\n    "firstName": "Chuck"\n  }\n}'},"eY+7":function(s,n){s.exports='{\n  "schema": {\n    "type": "object",\n    "properties": {\n      "age": {\n        "type": "integer",\n        "title": "Age"\n      }\n    },\n    "anyOf": [\n      {\n        "title": "First method of identification",\n        "properties": {\n          "firstName": {\n            "type": "string",\n            "title": "First name",\n            "default": "Chuck"\n          },\n          "lastName": {\n            "type": "string",\n            "title": "Last name"\n          }\n        }\n      },\n      {\n        "title": "Second method of identification",\n        "properties": {\n          "idCode": {\n            "type": "string",\n            "title": "ID code"\n          }\n        }\n      }\n    ]\n  },\n  "model": {\n    "firstName": "Chuck"\n  }\n}'},gRYL:function(s,n){s.exports='import { Component } from \'@angular/core\';\nimport { FieldArrayType } from \'@ngx-formly/core\';\n\n@Component({\n  selector: \'formly-array-type\',\n  template: `\n  <div class="mb-3">\n    <legend *ngIf="to.label">{{ to.label }}</legend>\n    <p *ngIf="to.description">{{ to.description }}</p>\n\n    <div class="alert alert-danger" role="alert" *ngIf="showError && formControl.errors">\n      <formly-validation-message [field]="field"></formly-validation-message>\n    </div>\n\n    <div *ngFor="let field of field.fieldGroup;let i = index;" class="row">\n      <formly-field class="col-10" [field]="field"></formly-field>\n      <div class="col-2 text-right">\n        <button class="btn btn-danger" type="button" (click)="remove(i)">-</button>\n      </div>\n    </div>\n\n    <div class="d-flex flex-row-reverse">\n      <button class="btn btn-primary" type="button" (click)="add()">+</button>\n    </div>\n  </div>\n  `,\n})\nexport class ArrayTypeComponent extends FieldArrayType {}\n'},"gh/q":function(s,n,a){"use strict";a.r(n);var l=a("CcnG"),t=a("gIcY"),e=a("HkYz"),p=function(){return(p=Object.assign||function(s){for(var n,a=1,l=arguments.length;a<l;a++)for(var t in n=arguments[a])Object.prototype.hasOwnProperty.call(n,t)&&(s[t]=n[t]);return s}).apply(this,arguments)};function i(s){return""===s||null==s}function r(s){s.options._checkField(s)}function o(s){return s.key?s.formControl.valid:s.fieldGroup.every(function(s){return o(s)})}var c=function(){function s(){}return s.prototype.toFieldConfig=function(s,n){return this._toFieldConfig(s,p({schema:s},n||{}))},s.prototype._toFieldConfig=function(s,n){var a=this;s=this.resolveSchema(s,n);var l={type:this.guessType(s),defaultValue:s.default,templateOptions:{label:s.title,readonly:s.readOnly,description:s.description}};switch(l.type){case"null":this.addValidator(l,"null",function(s){return null===s.value});break;case"number":case"integer":l.parsers=[function(s){return i(s)?null:Number(s)}],s.hasOwnProperty("minimum")&&(l.templateOptions.min=s.minimum),s.hasOwnProperty("maximum")&&(l.templateOptions.max=s.maximum),s.hasOwnProperty("exclusiveMinimum")&&(l.templateOptions.exclusiveMinimum=s.exclusiveMinimum,this.addValidator(l,"exclusiveMinimum",function(n){var a=n.value;return i(a)||a>s.exclusiveMinimum})),s.hasOwnProperty("exclusiveMaximum")&&(l.templateOptions.exclusiveMaximum=s.exclusiveMaximum,this.addValidator(l,"exclusiveMaximum",function(n){var a=n.value;return i(a)||a<s.exclusiveMaximum})),s.hasOwnProperty("multipleOf")&&(l.templateOptions.step=s.multipleOf,this.addValidator(l,"multipleOf",function(n){var a=n.value;return i(a)||a%s.multipleOf==0}));break;case"string":var t=s.type;Array.isArray(t)&&t.includes("null")&&(l.parsers=[function(s){return i(s)?null:s}]),["minLength","maxLength","pattern"].forEach(function(n){s.hasOwnProperty(n)&&(l.templateOptions[n]=s[n])});break;case"object":l.fieldGroup=[];var r=this.resolveDependencies(s),o=r[0],c=r[1];Object.keys(s.properties||{}).forEach(function(t){var e=a._toFieldConfig(s.properties[t],n);l.fieldGroup.push(e),e.key=t,Array.isArray(s.required)&&-1!==s.required.indexOf(t)&&(e.templateOptions.required=!0),!e.templateOptions.required&&o[t]&&(e.expressionProperties={"templateOptions.required":function(s){return s&&o[t].some(function(n){return!i(s[n])})}}),c[t]&&l.fieldGroup.push(p({},a._toFieldConfig(c[t],n),{hideExpression:function(s){return!s||i(s[t])}}))}),s.oneOf&&l.fieldGroup.push(this.resolveMultiSchema(s.oneOf,n)),s.anyOf&&l.fieldGroup.push(this.resolveMultiSchema(s.anyOf,n));break;case"array":s.hasOwnProperty("minItems")&&(l.templateOptions.minItems=s.minItems,this.addValidator(l,"minItems",function(n){var a=n.value;return i(a)||a.length>=s.minItems})),s.hasOwnProperty("maxItems")&&(l.templateOptions.maxItems=s.maxItems,this.addValidator(l,"maxItems",function(n){var a=n.value;return i(a)||a.length<=s.maxItems})),s.hasOwnProperty("uniqueItems")&&(l.templateOptions.uniqueItems=s.uniqueItems,this.addValidator(l,"uniqueItems",function(n){var a=n.value;return!(!i(a)&&s.uniqueItems)||Array.from(new Set(a.map(function(s){return JSON.stringify(s)}))).length===a.length})),s.items&&!Array.isArray(s.items)&&(s.items=this.resolveSchema(s.items,n)),this.isEnum(s)||(l.fieldGroup=[],Object.defineProperty(l,"fieldArray",{get:function(){if(!Array.isArray(s.items))return a._toFieldConfig(s.items,n);var t=s.items[l.fieldGroup.length]?s.items[l.fieldGroup.length]:s.additionalItems;return t?a._toFieldConfig(t,n):{}},enumerable:!0,configurable:!0}))}return this.isEnum(s)&&(l.templateOptions.multiple="array"===l.type,l.type="enum",l.templateOptions.options=this.toEnumOptions(s)),s.widget&&s.widget.formlyConfig&&(l=Object(e.f)(s.widget.formlyConfig,l)),n.map?n.map(l,s):l},s.prototype.resolveSchema=function(s,n){return s.$ref&&(s=this.resolveDefinition(s,n)),s.allOf&&(s=this.resolveAllOf(s,n)),s},s.prototype.resolveAllOf=function(s,n){var a=this,l=s.allOf,t=function(s,n){var a={};for(var l in s)Object.prototype.hasOwnProperty.call(s,l)&&n.indexOf(l)<0&&(a[l]=s[l]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var t=0;for(l=Object.getOwnPropertySymbols(s);t<l.length;t++)n.indexOf(l[t])<0&&(a[l[t]]=s[l[t]])}return a}(s,["allOf"]);if(!l.length)throw Error("allOf array can not be empty "+l+".");return l.reduce(function(s,l){return l=a.resolveSchema(l,n),s.required&&l.required&&(s.required=s.required.concat(l.required)),l.uniqueItems&&(s.uniqueItems=l.uniqueItems),["maxLength","maximum","exclusiveMaximum","maxItems","maxProperties"].forEach(function(n){i(s[n])||i(l[n])||(s[n]=s[n]<l[n]?s[n]:l[n])}),["minLength","minimum","exclusiveMinimum","minItems","minProperties"].forEach(function(n){i(s[n])||i(l[n])||(s[n]=s[n]>l[n]?s[n]:l[n])}),Object(e.f)(s,l)},t)},s.prototype.resolveMultiSchema=function(s,n){var a=this,l=null;return{type:"multischema",fieldGroup:[{type:"enum",templateOptions:{options:s.map(function(s,n){return{label:s.title,value:n}})},hooks:{onInit:function(s){var n=s.parent.fieldGroup[1],a=n.fieldGroup.findIndex(o);s.formControl=new t.FormControl(-1!==a?a:0),setTimeout(function(){return r(n)}),l=s.formControl.valueChanges.subscribe(function(s){!function s(n){n.key?(n.formControl.patchValue(void 0),delete n.model[n.key]):n.fieldGroup&&n.fieldGroup.forEach(function(n){return s(n)})}(n),r(n)})},onDestroy:function(){l&&l.unsubscribe()}}},{fieldGroup:s.map(function(s,l){return p({},a._toFieldConfig(s,n),{hideExpression:function(s,n,a){var t=a.parent.parent.fieldGroup[0].formControl;return!t||t.value!==l}})})}]}},s.prototype.resolveDefinition=function(s,n){var a=s.$ref.split("#/"),l=a[1];if(a[0])throw Error("Remote schemas for "+s.$ref+" not supported yet.");var t=l?l.split("/").reduce(function(s,n){return s&&s.hasOwnProperty(n)?s[n]:null},n.schema):null;if(!t)throw Error("Cannot find a definition for "+s.$ref+".");return t.$ref?this.resolveDefinition(t,n):p({},t,["title","description","default"].reduce(function(n,a){return s.hasOwnProperty(a)&&(n[a]=s[a]),n},{}))},s.prototype.resolveDependencies=function(s){var n={},a={};return Object.keys(s.dependencies||{}).forEach(function(l){var t=s.dependencies[l];Array.isArray(t)?t.forEach(function(s){n[s]?n[s].push(l):n[s]=[l]}):a[l]=t}),[n,a]},s.prototype.guessType=function(s){var n=s.type;if(!n&&s.properties)return"object";if(Array.isArray(n)){if(1===n.length)return n[0];if(2===n.length&&n.includes("null"))return n["null"===n[0]?1:0]}return n},s.prototype.addValidator=function(s,n,a){s.validators=s.validators||{},s.validators[n]=a},s.prototype.isEnum=function(s){var n=function(s){return s.hasOwnProperty("const")||s.enum&&1===s.enum.length};return s.enum||s.anyOf&&s.anyOf.every(n)||s.oneOf&&s.oneOf.every(n)||s.uniqueItems&&s.items&&!Array.isArray(s.items)&&this.isEnum(s.items)},s.prototype.toEnumOptions=function(s){if(s.enum)return s.enum.map(function(s){return{value:s,label:s}});var n=function(s){var n=s.hasOwnProperty("const")?s.const:s.enum[0];return{value:n,label:s.title||n}};return s.anyOf?s.anyOf.map(n):s.oneOf?s.oneOf.map(n):this.toEnumOptions(s.items)},s.ngInjectableDef=l.defineInjectable({factory:function(){return new s},token:s,providedIn:"root"}),s}(),m=a("xMyE"),u=function(){function s(s,n){this.formlyJsonschema=s,this.http=n,this.examples=["simple","nested","arrays","numbers","references","schema_dependencies","null_field","nullable","allOf","anyOf","oneOf","select_alternatives"],this.loadExample(this.examples[0])}return s.prototype.loadExample=function(s){var n=this;this.http.get("assets/json-schema/"+s+"_json").pipe(Object(m.a)(function(a){var l=a.schema,e=a.model;n.type=s,n.form=new t.FormGroup({}),n.options={},n.fields=[n.formlyJsonschema.toFieldConfig(l)],n.model=e})).subscribe()},s.prototype.submit=function(){alert(JSON.stringify(this.model))},s}(),g={examples:[{title:"Json Schema",component:u,debug:!1,files:[{file:"app.component.html",content:a("xsVu"),filecontent:a("10K4")},{file:"app.component.ts",content:a("dagV"),filecontent:a("xueC")},{file:"app.module.ts",content:a("A1RU"),filecontent:a("iXnB")},{file:"array.type.ts",content:a("cig/"),filecontent:a("gRYL")},{file:"object.type.ts",content:a("DVcM"),filecontent:a("HBru")},{file:"multischema.type.ts",content:a("LeSW"),filecontent:a("9q2f")},{file:"null.type.ts",content:a("BqOT"),filecontent:a("P5fe")},{file:"assets/json-schema/simple.json",content:a("A1V9"),filecontent:a("FqsT")},{file:"assets/json-schema/nested.json",content:a("bsCt"),filecontent:a("OnUj")},{file:"assets/json-schema/arrays.json",content:a("/krV"),filecontent:a("rqhX")},{file:"assets/json-schema/numbers.json",content:a("LmA5"),filecontent:a("lUdx")},{file:"assets/json-schema/references.json",content:a("rqqs"),filecontent:a("YCm9")},{file:"assets/json-schema/schema_dependencies.json",content:a("kI7D"),filecontent:a("HtMo")},{file:"assets/json-schema/null_field.json",content:a("7wk9"),filecontent:a("e0q4")},{file:"assets/json-schema/nullable.json",content:a("JOvV"),filecontent:a("b7ha")},{file:"assets/json-schema/allOf.json",content:a("00py"),filecontent:a("oTMq")},{file:"assets/json-schema/anyOf.json",content:a("KHZg"),filecontent:a("eY+7")},{file:"assets/json-schema/oneOf.json",content:a("QsEr"),filecontent:a("9pS7")},{file:"assets/json-schema/select_alternatives.json",content:a("XG/j"),filecontent:a("NKmw")}]}]},h=function(){return function(){}}(),d=a("NcP4"),j=a("AcC/"),f=a("htty"),y=a("LgGJ"),b=a("MT1c"),v=a("1Q/V"),x=a("9+aI"),O=a("haId"),w=a("LJsP"),k=a("yR2A"),C=a("UFMs"),F=a("mrSG"),I=function(s){function n(){return null!==s&&s.apply(this,arguments)||this}return Object(F.__extends)(n,s),n}(e.b),M=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function N(s){return l["\u0275vid"](0,[],null,null)}function T(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-null-type",[],null,null,null,N,M)),l["\u0275did"](1,49152,null,0,I,[],null,null)],null,null)}var A=l["\u0275ccf"]("formly-null-type",I,T,{field:"field",model:"model",form:"form",options:"options"},{},[]),_=a("iynK"),S=a("TtaA"),q=a("DAbo"),V=a("cI/F"),R=a("fVcV"),L=a("Ip0R"),E=function(s){function n(){return null!==s&&s.apply(this,arguments)||this}return Object(F.__extends)(n,s),n}(e.a),G=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function $(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"legend",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.label)})}function D(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.description)})}function P(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,2,"div",[["class","alert alert-danger"],["role","alert"]],null,null,null,null,null)),(s()(),l["\u0275eld"](1,0,null,null,1,"formly-validation-message",[],null,null,null,_.b,_.a)),l["\u0275did"](2,49152,null,0,S.a,[q.b],{field:[0,"field"]},null)],function(s,n){s(n,2,0,n.component.field)},null)}function B(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,5,"div",[["class","row"]],null,null,null,null,null)),(s()(),l["\u0275eld"](1,0,null,null,1,"formly-field",[["class","col-10"]],[[4,"display",null],[8,"className",0]],null,null,V.b,V.a)),l["\u0275did"](2,16760832,null,0,R.a,[q.b,l.ComponentFactoryResolver,l.Injector,[8,null]],{field:[0,"field"],className:[1,"className"]},null),(s()(),l["\u0275eld"](3,0,null,null,2,"div",[["class","col-2 text-right"]],null,null,null,null,null)),(s()(),l["\u0275eld"](4,0,null,null,1,"button",[["class","btn btn-danger"],["type","button"]],null,[[null,"click"]],function(s,n,a){var l=!0;return"click"===n&&(l=!1!==s.component.remove(s.context.index)&&l),l},null,null)),(s()(),l["\u0275ted"](-1,null,["-"]))],function(s,n){s(n,2,0,n.context.$implicit,"col-10")},function(s,n){s(n,1,0,l["\u0275nov"](n,2).field.hide?"none":"",l["\u0275nov"](n,2).field.className?l["\u0275nov"](n,2).field.className:l["\u0275nov"](n,2).className)})}function J(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,11,"div",[["class","mb-3"]],null,null,null,null,null)),(s()(),l["\u0275and"](16777216,null,null,1,null,$)),l["\u0275did"](2,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,D)),l["\u0275did"](4,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,P)),l["\u0275did"](6,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,B)),l["\u0275did"](8,278528,null,0,L.NgForOf,[l.ViewContainerRef,l.TemplateRef,l.IterableDiffers],{ngForOf:[0,"ngForOf"]},null),(s()(),l["\u0275eld"](9,0,null,null,2,"div",[["class","d-flex flex-row-reverse"]],null,null,null,null,null)),(s()(),l["\u0275eld"](10,0,null,null,1,"button",[["class","btn btn-primary"],["type","button"]],null,[[null,"click"]],function(s,n,a){var l=!0;return"click"===n&&(l=!1!==s.component.add()&&l),l},null,null)),(s()(),l["\u0275ted"](-1,null,["+"]))],function(s,n){var a=n.component;s(n,2,0,a.to.label),s(n,4,0,a.to.description),s(n,6,0,a.showError&&a.formControl.errors),s(n,8,0,a.field.fieldGroup)},null)}function H(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-array-type",[],null,null,null,J,G)),l["\u0275did"](1,49152,null,0,E,[[2,q.a]],null,null)],null,null)}var U=l["\u0275ccf"]("formly-array-type",E,H,{field:"field",model:"model",form:"form",options:"options"},{},[]),Y=function(s){function n(){var n=null!==s&&s.apply(this,arguments)||this;return n.defaultOptions={defaultValue:{}},n}return Object(F.__extends)(n,s),n}(e.b),z=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function X(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"legend",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.label)})}function K(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.description)})}function Z(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,2,"div",[["class","alert alert-danger"],["role","alert"]],null,null,null,null,null)),(s()(),l["\u0275eld"](1,0,null,null,1,"formly-validation-message",[],null,null,null,_.b,_.a)),l["\u0275did"](2,49152,null,0,S.a,[q.b],{field:[0,"field"]},null)],function(s,n){s(n,2,0,n.component.field)},null)}function W(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-field",[],[[4,"display",null],[8,"className",0]],null,null,V.b,V.a)),l["\u0275did"](1,16760832,null,0,R.a,[q.b,l.ComponentFactoryResolver,l.Injector,[8,null]],{field:[0,"field"]},null)],function(s,n){s(n,1,0,n.context.$implicit)},function(s,n){s(n,0,0,l["\u0275nov"](n,1).field.hide?"none":"",l["\u0275nov"](n,1).field.className?l["\u0275nov"](n,1).field.className:l["\u0275nov"](n,1).className)})}function Q(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,8,"div",[["class","mb-3"]],null,null,null,null,null)),(s()(),l["\u0275and"](16777216,null,null,1,null,X)),l["\u0275did"](2,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,K)),l["\u0275did"](4,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,Z)),l["\u0275did"](6,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,W)),l["\u0275did"](8,278528,null,0,L.NgForOf,[l.ViewContainerRef,l.TemplateRef,l.IterableDiffers],{ngForOf:[0,"ngForOf"]},null)],function(s,n){var a=n.component;s(n,2,0,a.to.label),s(n,4,0,a.to.description),s(n,6,0,a.showError&&a.formControl.errors),s(n,8,0,a.field.fieldGroup)},null)}function ss(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-object-type",[],null,null,null,Q,z)),l["\u0275did"](1,49152,null,0,Y,[],null,null)],null,null)}var ns=l["\u0275ccf"]("formly-object-type",Y,ss,{field:"field",model:"model",form:"form",options:"options"},{},[]),as=function(s){function n(){return null!==s&&s.apply(this,arguments)||this}return Object(F.__extends)(n,s),n}(e.b),ls=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function ts(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"legend",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.label)})}function es(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(s()(),l["\u0275ted"](1,null,["",""]))],null,function(s,n){s(n,1,0,n.component.to.description)})}function ps(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,2,"div",[["class","alert alert-danger"],["role","alert"]],null,null,null,null,null)),(s()(),l["\u0275eld"](1,0,null,null,1,"formly-validation-message",[],null,null,null,_.b,_.a)),l["\u0275did"](2,49152,null,0,S.a,[q.b],{field:[0,"field"]},null)],function(s,n){s(n,2,0,n.component.field)},null)}function is(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-field",[],[[4,"display",null],[8,"className",0]],null,null,V.b,V.a)),l["\u0275did"](1,16760832,null,0,R.a,[q.b,l.ComponentFactoryResolver,l.Injector,[8,null]],{field:[0,"field"]},null)],function(s,n){s(n,1,0,n.context.$implicit)},function(s,n){s(n,0,0,l["\u0275nov"](n,1).field.hide?"none":"",l["\u0275nov"](n,1).field.className?l["\u0275nov"](n,1).field.className:l["\u0275nov"](n,1).className)})}function rs(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,9,"div",[["class","card mb-3"]],null,null,null,null,null)),(s()(),l["\u0275eld"](1,0,null,null,8,"div",[["class","card-body"]],null,null,null,null,null)),(s()(),l["\u0275and"](16777216,null,null,1,null,ts)),l["\u0275did"](3,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,es)),l["\u0275did"](5,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,ps)),l["\u0275did"](7,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,is)),l["\u0275did"](9,278528,null,0,L.NgForOf,[l.ViewContainerRef,l.TemplateRef,l.IterableDiffers],{ngForOf:[0,"ngForOf"]},null)],function(s,n){var a=n.component;s(n,3,0,a.to.label),s(n,5,0,a.to.description),s(n,7,0,a.showError&&a.formControl.errors),s(n,9,0,a.field.fieldGroup)},null)}function os(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-multi-schema-type",[],null,null,null,rs,ls)),l["\u0275did"](1,49152,null,0,as,[],null,null)],null,null)}var cs=l["\u0275ccf"]("formly-multi-schema-type",as,os,{field:"field",model:"model",form:"form",options:"options"},{},[]),ms=a("pMnS"),us=a("4o01"),gs=a("Dl9q"),hs=a("UcnZ"),ds=a("9Glx"),js=a("t/Na"),fs=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function ys(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"button",[["class","btn"]],[[2,"btn-primary",null]],[[null,"click"]],function(s,n,a){var l=!0;return"click"===n&&(l=!1!==s.component.loadExample(s.context.$implicit)&&l),l},null,null)),(s()(),l["\u0275ted"](1,null,[" "," "]))],null,function(s,n){s(n,0,0,n.component.type===n.context.$implicit),s(n,1,0,n.context.$implicit)})}function bs(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,9,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(s,n,a){var t=!0,e=s.component;return"submit"===n&&(t=!1!==l["\u0275nov"](s,2).onSubmit(a)&&t),"reset"===n&&(t=!1!==l["\u0275nov"](s,2).onReset()&&t),"ngSubmit"===n&&(t=!1!==e.submit()&&t),t},null,null)),l["\u0275did"](1,16384,null,0,t["\u0275angular_packages_forms_forms_bh"],[],null,null),l["\u0275did"](2,540672,null,0,t.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),l["\u0275prd"](2048,null,t.ControlContainer,null,[t.FormGroupDirective]),l["\u0275did"](4,16384,null,0,t.NgControlStatusGroup,[[4,t.ControlContainer]],null,null),(s()(),l["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,gs.b,gs.a)),l["\u0275prd"](512,null,hs.a,hs.a,[q.b,l.ComponentFactoryResolver,l.Injector]),l["\u0275did"](7,966656,null,0,ds.a,[hs.a,q.b,[8,null],[2,t.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null),(s()(),l["\u0275eld"](8,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],[[8,"disabled",0]],null,null,null,null)),(s()(),l["\u0275ted"](-1,null,["Submit"]))],function(s,n){var a=n.component;s(n,2,0,a.form),s(n,7,0,a.form,a.model,a.fields,a.options)},function(s,n){var a=n.component;s(n,0,0,l["\u0275nov"](n,4).ngClassUntouched,l["\u0275nov"](n,4).ngClassTouched,l["\u0275nov"](n,4).ngClassPristine,l["\u0275nov"](n,4).ngClassDirty,l["\u0275nov"](n,4).ngClassValid,l["\u0275nov"](n,4).ngClassInvalid,l["\u0275nov"](n,4).ngClassPending),s(n,8,0,!a.form.valid)})}function vs(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,2,"div",[["style","margin-bottom: 20px;"]],null,null,null,null,null)),(s()(),l["\u0275and"](16777216,null,null,1,null,ys)),l["\u0275did"](2,278528,null,0,L.NgForOf,[l.ViewContainerRef,l.TemplateRef,l.IterableDiffers],{ngForOf:[0,"ngForOf"]},null),(s()(),l["\u0275and"](16777216,null,null,1,null,bs)),l["\u0275did"](4,16384,null,0,L.NgIf,[l.ViewContainerRef,l.TemplateRef],{ngIf:[0,"ngIf"]},null)],function(s,n){var a=n.component;s(n,2,0,a.examples),s(n,4,0,a.fields)},null)}function xs(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,vs,fs)),l["\u0275did"](1,49152,null,0,u,[c,js.c],null,null)],null,null)}var Os=l["\u0275ccf"]("formly-app-example",u,xs,{},{},[]),ws=a("M2Lx"),ks=a("eDkP"),Cs=a("Fzqc"),Fs=a("v9Dh"),Is=a("ZYjt"),Ms=a("Wf4p"),Ns=a("mVsa"),Ts=a("6LlJ"),As=a("F6kA"),_s=a("dWZg"),Ss=a("lLAP"),qs=a("4c35"),Vs=a("qAlS"),Rs=a("La40"),Ls=a("SMsm"),Es=a("UodH"),Gs=a("5QwG"),$s=a("qkla"),Ds=a("iZhS"),Ps=a("me7w"),Bs=a("N3PW"),Js=a("l4pn"),Hs=a("Fv2i"),Us=a("wBYW"),Ys=a("IE48"),zs=a("Q4Tx"),Xs=a("XR12");function Ks(s,n){return"should NOT have fewer than "+n.templateOptions.minItems+" items"}function Zs(s,n){return"should NOT have more than "+n.templateOptions.maxItems+" items"}function Ws(s,n){return"should NOT be shorter than "+n.templateOptions.minLength+" characters"}function Qs(s,n){return"should NOT be longer than "+n.templateOptions.maxLength+" characters"}function sn(s,n){return"should be >= "+n.templateOptions.min}function nn(s,n){return"should be <= "+n.templateOptions.max}function an(s,n){return"should be multiple of "+n.templateOptions.step}function ln(s,n){return"should be > "+n.templateOptions.step}function tn(s,n){return"should be < "+n.templateOptions.step}var en=function(){return function(){}}(),pn=a("Nsh5"),rn=a("8mMr"),on=a("mqvi"),cn=a("lYui"),mn=a("VGFS"),un=a("1ey0"),gn=a("ZYCi"),hn=a("cIcG");a.d(n,"ConfigModuleNgFactory",function(){return dn});var dn=l["\u0275cmf"](h,[],function(s){return l["\u0275mod"]([l["\u0275mpd"](512,l.ComponentFactoryResolver,l["\u0275CodegenComponentFactoryResolver"],[[8,[d.a,j.a,f.a,y.a,b.a,v.a,x.a,O.a,w.a,k.a,C.a,A,U,ns,cs,ms.a,us.a,Os]],[3,l.ComponentFactoryResolver],l.NgModuleRef]),l["\u0275mpd"](4608,L.NgLocalization,L.NgLocaleLocalization,[l.LOCALE_ID,[2,L["\u0275angular_packages_common_common_a"]]]),l["\u0275mpd"](4608,ws.c,ws.c,[]),l["\u0275mpd"](4608,ks.c,ks.c,[ks.i,ks.e,l.ComponentFactoryResolver,ks.h,ks.f,l.Injector,l.NgZone,L.DOCUMENT,Cs.b,[2,L.Location]]),l["\u0275mpd"](5120,ks.j,ks.k,[ks.c]),l["\u0275mpd"](5120,Fs.b,Fs.c,[ks.c]),l["\u0275mpd"](4608,Is.f,Ms.c,[[2,Ms.g],[2,Ms.l]]),l["\u0275mpd"](5120,Ns.b,Ns.g,[ks.c]),l["\u0275mpd"](4608,Ts.a,Ts.a,[]),l["\u0275mpd"](4608,As.a,As.a,[]),l["\u0275mpd"](4608,t.FormBuilder,t.FormBuilder,[]),l["\u0275mpd"](4608,t["\u0275angular_packages_forms_forms_j"],t["\u0275angular_packages_forms_forms_j"],[]),l["\u0275mpd"](4608,hs.a,hs.a,[q.b,l.ComponentFactoryResolver,l.Injector]),l["\u0275mpd"](4608,js.h,js.n,[L.DOCUMENT,l.PLATFORM_ID,js.l]),l["\u0275mpd"](4608,js.o,js.o,[js.h,js.m]),l["\u0275mpd"](5120,js.a,function(s){return[s]},[js.o]),l["\u0275mpd"](4608,js.k,js.k,[]),l["\u0275mpd"](6144,js.i,null,[js.k]),l["\u0275mpd"](4608,js.g,js.g,[js.i]),l["\u0275mpd"](6144,js.b,null,[js.g]),l["\u0275mpd"](4608,js.f,js.j,[js.b,l.Injector]),l["\u0275mpd"](4608,js.c,js.c,[js.f]),l["\u0275mpd"](1073742336,L.CommonModule,L.CommonModule,[]),l["\u0275mpd"](1073742336,_s.b,_s.b,[]),l["\u0275mpd"](1073742336,ws.d,ws.d,[]),l["\u0275mpd"](1073742336,Ss.a,Ss.a,[]),l["\u0275mpd"](1073742336,Cs.a,Cs.a,[]),l["\u0275mpd"](1073742336,qs.g,qs.g,[]),l["\u0275mpd"](1073742336,Vs.ScrollingModule,Vs.ScrollingModule,[]),l["\u0275mpd"](1073742336,ks.g,ks.g,[]),l["\u0275mpd"](1073742336,Ms.l,Ms.l,[[2,Ms.d],[2,Is.g]]),l["\u0275mpd"](1073742336,Fs.e,Fs.e,[]),l["\u0275mpd"](1073742336,Ms.v,Ms.v,[]),l["\u0275mpd"](1073742336,Rs.j,Rs.j,[]),l["\u0275mpd"](1073742336,Ns.e,Ns.e,[]),l["\u0275mpd"](1073742336,Ls.c,Ls.c,[]),l["\u0275mpd"](1073742336,Es.c,Es.c,[]),l["\u0275mpd"](1073742336,Gs.b,Gs.b,[]),l["\u0275mpd"](512,q.b,q.b,[]),l["\u0275mpd"](1024,q.a,function(s){return[{wrappers:[{name:"addons",component:$s.a}],extensions:[{name:"addons",extension:{postPopulate:Ds.a}}]},{types:[{name:"input",component:Ps.a,wrappers:["form-field"]},{name:"checkbox",component:Bs.a,wrappers:["form-field"]},{name:"radio",component:Js.a,wrappers:["form-field"]},{name:"select",component:Hs.a,wrappers:["form-field"]},{name:"textarea",component:Us.a,wrappers:["form-field"]},{name:"multicheckbox",component:Ys.a,wrappers:["form-field"]}],wrappers:[{name:"form-field",component:zs.a}]},Xs.b(s),{validationMessages:[{name:"required",message:"This field is required"},{name:"null",message:"should be null"},{name:"minlength",message:Ws},{name:"maxlength",message:Qs},{name:"min",message:sn},{name:"max",message:nn},{name:"multipleOf",message:an},{name:"exclusiveMinimum",message:ln},{name:"exclusiveMaximum",message:tn},{name:"minItems",message:Ks},{name:"maxItems",message:Zs},{name:"uniqueItems",message:"should NOT have duplicate items"}],types:[{name:"string",extends:"input"},{name:"number",extends:"input",defaultOptions:{templateOptions:{type:"number"}}},{name:"integer",extends:"input",defaultOptions:{templateOptions:{type:"number"}}},{name:"boolean",extends:"checkbox"},{name:"enum",extends:"select"},{name:"null",component:I,wrappers:["form-field"]},{name:"array",component:E},{name:"object",component:Y},{name:"multischema",component:as}]}]},[q.b]),l["\u0275mpd"](1073742336,Xs.a,Xs.a,[q.b,[2,q.a]]),l["\u0275mpd"](1073742336,pn.h,pn.h,[]),l["\u0275mpd"](1073742336,rn.b,rn.b,[]),l["\u0275mpd"](1073742336,on.a,on.a,[]),l["\u0275mpd"](1073742336,t["\u0275angular_packages_forms_forms_bc"],t["\u0275angular_packages_forms_forms_bc"],[]),l["\u0275mpd"](1073742336,t.ReactiveFormsModule,t.ReactiveFormsModule,[]),l["\u0275mpd"](1073742336,cn.a,cn.a,[]),l["\u0275mpd"](1073742336,mn.a,mn.a,[]),l["\u0275mpd"](1073742336,un.a,un.a,[]),l["\u0275mpd"](1073742336,js.e,js.e,[]),l["\u0275mpd"](1073742336,js.d,js.d,[]),l["\u0275mpd"](1073742336,en,en,[]),l["\u0275mpd"](1073742336,gn.s,gn.s,[[2,gn.y],[2,gn.p]]),l["\u0275mpd"](1073742336,h,h,[]),l["\u0275mpd"](256,js.l,"XSRF-TOKEN",[]),l["\u0275mpd"](256,js.m,"X-XSRF-TOKEN",[]),l["\u0275mpd"](1024,gn.n,function(){return[[{path:"",component:hn.a,data:g}]]},[])])})},iXnB:function(s,n){s.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { AppComponent } from './app.component';\nimport { ArrayTypeComponent } from './array.type';\nimport { ObjectTypeComponent } from './object.type';\nimport { MultiSchemaTypeComponent } from './multischema.type';\nimport { NullTypeComponent } from './null.type';\n\nexport function minItemsValidationMessage(err, field: FormlyFieldConfig) {\n  return `should NOT have fewer than ${field.templateOptions.minItems} items`;\n}\n\nexport function maxItemsValidationMessage(err, field: FormlyFieldConfig) {\n  return `should NOT have more than ${field.templateOptions.maxItems} items`;\n}\n\nexport function minlengthValidationMessage(err, field: FormlyFieldConfig) {\n  return `should NOT be shorter than ${field.templateOptions.minLength} characters`;\n}\n\nexport function maxlengthValidationMessage(err, field: FormlyFieldConfig) {\n  return `should NOT be longer than ${field.templateOptions.maxLength} characters`;\n}\n\nexport function minValidationMessage(err, field: FormlyFieldConfig) {\n  return `should be >= ${field.templateOptions.min}`;\n}\n\nexport function maxValidationMessage(err, field: FormlyFieldConfig) {\n  return `should be <= ${field.templateOptions.max}`;\n}\n\nexport function multipleOfValidationMessage(err, field: FormlyFieldConfig) {\n  return `should be multiple of ${field.templateOptions.step}`;\n}\n\nexport function exclusiveMinimumValidationMessage(err, field: FormlyFieldConfig) {\n  return `should be > ${field.templateOptions.step}`;\n}\n\nexport function exclusiveMaximumValidationMessage(err, field: FormlyFieldConfig) {\n  return `should be < ${field.templateOptions.step}`;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    HttpClientModule,\n    MatMenuModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n        { name: 'null', message: 'should be null' },\n        { name: 'minlength', message: minlengthValidationMessage },\n        { name: 'maxlength', message: maxlengthValidationMessage },\n        { name: 'min', message: minValidationMessage },\n        { name: 'max', message: maxValidationMessage },\n        { name: 'multipleOf', message: multipleOfValidationMessage },\n        { name: 'exclusiveMinimum', message: exclusiveMinimumValidationMessage },\n        { name: 'exclusiveMaximum', message: exclusiveMaximumValidationMessage },\n        { name: 'minItems', message: minItemsValidationMessage },\n        { name: 'maxItems', message: maxItemsValidationMessage },\n        { name: 'uniqueItems', message: 'should NOT have duplicate items' },\n      ],\n      types: [\n        { name: 'string', extends: 'input' },\n        {\n          name: 'number',\n          extends: 'input',\n          defaultOptions: {\n            templateOptions: {\n              type: 'number',\n            },\n          },\n        },\n        {\n          name: 'integer',\n          extends: 'input',\n          defaultOptions: {\n            templateOptions: {\n              type: 'number',\n            },\n          },\n        },\n        { name: 'boolean', extends: 'checkbox' },\n        { name: 'enum', extends: 'select' },\n        { name: 'null', component: NullTypeComponent, wrappers: ['form-field'] },\n        { name: 'array', component: ArrayTypeComponent },\n        { name: 'object', component: ObjectTypeComponent },\n        { name: 'multischema', component: MultiSchemaTypeComponent },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    ArrayTypeComponent,\n    ObjectTypeComponent,\n    MultiSchemaTypeComponent,\n    NullTypeComponent,\n  ],\n})\nexport class AppModule { }\n"},kI7D:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Schema dependencies"</span>,\n    <span class="hljs-string">"description"</span>: <span class="hljs-string">"These samples are best viewed without live validation."</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"simple"</span>: {\n        <span class="hljs-string">"src"</span>: <span class="hljs-string">"https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies"</span>,\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Simple"</span>,\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"name"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Name"</span>\n          },\n          <span class="hljs-string">"credit_card"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"number"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Credit card"</span>\n          }\n        },\n        <span class="hljs-string">"required"</span>: [\n          <span class="hljs-string">"name"</span>\n        ],\n        <span class="hljs-string">"dependencies"</span>: {\n          <span class="hljs-string">"credit_card"</span>: {\n            <span class="hljs-string">"properties"</span>: {\n              <span class="hljs-string">"billing_address"</span>: {\n                <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n                <span class="hljs-string">"title"</span>: <span class="hljs-string">"Billing address"</span>\n              }\n            },\n            <span class="hljs-string">"required"</span>: [\n              <span class="hljs-string">"billing_address"</span>\n            ]\n          }\n        }\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"simple"</span>: {\n      <span class="hljs-string">"name"</span>: <span class="hljs-string">"Randy"</span>\n    }\n  }\n}'},lUdx:function(s,n){s.exports='{\n  "schema": {\n    "type": "object",\n    "title": "Number fields & widgets",\n    "properties": {\n      "number": {\n        "title": "Number",\n        "type": "number"\n      },\n      "integer": {\n        "title": "Integer",\n        "type": "integer"\n      },\n      "numberEnum": {\n        "type": "number",\n        "title": "Number enum",\n        "enum": [\n          1,\n          2,\n          3\n        ]\n      },\n      "numberEnumRadio": {\n        "type": "number",\n        "title": "Number enum",\n        "enum": [\n          1,\n          2,\n          3\n        ]\n      },\n      "integerRange": {\n        "title": "Integer range",\n        "type": "integer",\n        "minimum": 42,\n        "maximum": 100\n      },\n      "integerRangeSteps": {\n        "title": "Integer range (by 10)",\n        "type": "integer",\n        "minimum": 50,\n        "maximum": 100,\n        "multipleOf": 10\n      }\n    }\n  },\n  "model": {\n    "number": 3.14,\n    "integer": 42,\n    "numberEnum": 2,\n    "integerRange": 42,\n    "integerRangeSteps": 80\n  }\n}'},oTMq:function(s,n){s.exports='{\n  "schema": {\n    "title": "Extending",\n    "definitions": {\n      "address": {\n        "type": "object",\n        "properties": {\n          "street_address": {\n            "title": "Address",\n            "type": "string"\n          },\n          "city": {\n            "title": "City",\n            "type": "string"\n          },\n          "state": {\n            "title": "State",\n            "type": "string"\n          }\n        },\n        "required": [\n          "street_address",\n          "city",\n          "state"\n        ]\n      }\n    },\n    "type": "object",\n    "properties": {\n      "billing_address": {\n        "title": "Billing Address",\n        "$ref": "#/definitions/address"\n      },\n      "shipping_address": {\n        "allOf": [\n          {\n            "title": "Shipping Address",\n            "$ref": "#/definitions/address"\n          },\n          {\n            "properties": {\n              "type": {\n                "title": "Housing type",\n                "enum": [\n                  "Residential",\n                  "Business"\n                ]\n              }\n            },\n            "required": [\n              "type"\n            ]\n          }\n        ]\n      }\n    }\n  }\n}'},rqhX:function(s,n){s.exports='{\n  "schema": {\n    "definitions": {\n      "Thing": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "default": "Default name"\n          }\n        }\n      }\n    },\n    "type": "object",\n    "properties": {\n      "listOfStrings": {\n        "type": "array",\n        "title": "A list of strings",\n        "items": {\n          "type": "string",\n          "default": "bazinga"\n        }\n      },\n      "multipleChoicesList": {\n        "type": "array",\n        "title": "A multiple choices list",\n        "items": {\n          "type": "string",\n          "enum": [\n            "foo",\n            "bar",\n            "fuzz",\n            "qux"\n          ]\n        },\n        "uniqueItems": true\n      },\n      "fixedItemsList": {\n        "type": "array",\n        "title": "A list of fixed items",\n        "items": [\n          {\n            "title": "A string value",\n            "type": "string",\n            "default": "lorem ipsum"\n          },\n          {\n            "title": "a boolean value",\n            "type": "boolean"\n          }\n        ],\n        "additionalItems": {\n          "title": "Additional item",\n          "type": "number"\n        }\n      },\n      "minItemsList": {\n        "type": "array",\n        "title": "A list with a minimal number of items",\n        "minItems": 3,\n        "items": {\n          "$ref": "#/definitions/Thing"\n        }\n      },\n      "defaultsAndMinItems": {\n        "type": "array",\n        "title": "List and item level defaults",\n        "minItems": 5,\n        "default": [\n          "carp",\n          "trout",\n          "bream"\n        ],\n        "items": {\n          "type": "string",\n          "default": "unidentified"\n        }\n      },\n      "nestedList": {\n        "type": "array",\n        "title": "Nested list",\n        "items": {\n          "type": "array",\n          "title": "Inner list",\n          "items": {\n            "type": "string",\n            "default": "lorem ipsum"\n          }\n        }\n      },\n      "unorderable": {\n        "title": "Unorderable items",\n        "type": "array",\n        "items": {\n          "type": "string",\n          "default": "lorem ipsum"\n        }\n      },\n      "unremovable": {\n        "title": "Unremovable items",\n        "type": "array",\n        "items": {\n          "type": "string",\n          "default": "lorem ipsum"\n        }\n      },\n      "noToolbar": {\n        "title": "No add, remove and order buttons",\n        "type": "array",\n        "items": {\n          "type": "string",\n          "default": "lorem ipsum"\n        }\n      },\n      "fixedNoToolbar": {\n        "title": "Fixed array without buttons",\n        "type": "array",\n        "items": [\n          {\n            "title": "A number",\n            "type": "number",\n            "default": 42\n          },\n          {\n            "title": "A boolean",\n            "type": "boolean",\n            "default": false\n          }\n        ],\n        "additionalItems": {\n          "title": "A string",\n          "type": "string",\n          "default": "lorem ipsum"\n        }\n      }\n    }\n  },\n  "model": {\n    "listOfStrings": [\n      "foo",\n      "bar"\n    ],\n    "multipleChoicesList": [\n      "foo",\n      "bar"\n    ],\n    "fixedItemsList": [\n      "Some text",\n      true,\n      123\n    ],\n    "nestedList": [\n      [\n        "lorem",\n        "ipsum"\n      ],\n      [\n        "dolor"\n      ]\n    ],\n    "unorderable": [\n      "one",\n      "two"\n    ],\n    "unremovable": [\n      "one",\n      "two"\n    ],\n    "noToolbar": [\n      "one",\n      "two"\n    ],\n    "fixedNoToolbar": [\n      42,\n      true,\n      "additional item one",\n      "additional item two"\n    ]\n  }\n}'},rqqs:function(s,n){s.exports='{\n  <span class="hljs-string">"schema"</span>: {\n    <span class="hljs-string">"definitions"</span>: {\n      <span class="hljs-string">"address"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"street_address"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Street address"</span>\n          },\n          <span class="hljs-string">"city"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"City"</span>\n          },\n          <span class="hljs-string">"state"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"State"</span>\n          }\n        },\n        <span class="hljs-string">"required"</span>: [\n          <span class="hljs-string">"street_address"</span>,\n          <span class="hljs-string">"city"</span>,\n          <span class="hljs-string">"state"</span>\n        ]\n      },\n      <span class="hljs-string">"node"</span>: {\n        <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n        <span class="hljs-string">"properties"</span>: {\n          <span class="hljs-string">"name"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"string"</span>,\n            <span class="hljs-string">"title"</span>: <span class="hljs-string">"Name"</span>\n          },\n          <span class="hljs-string">"children"</span>: {\n            <span class="hljs-string">"type"</span>: <span class="hljs-string">"array"</span>,\n            <span class="hljs-string">"items"</span>: {\n              <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/node"</span>\n            }\n          }\n        }\n      }\n    },\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span>,\n    <span class="hljs-string">"properties"</span>: {\n      <span class="hljs-string">"billing_address"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Billing address"</span>,\n        <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/address"</span>\n      },\n      <span class="hljs-string">"shipping_address"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Shipping address"</span>,\n        <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/address"</span>\n      },\n      <span class="hljs-string">"tree"</span>: {\n        <span class="hljs-string">"title"</span>: <span class="hljs-string">"Recursive references"</span>,\n        <span class="hljs-string">"$ref"</span>: <span class="hljs-string">"#/definitions/node"</span>\n      }\n    }\n  },\n  <span class="hljs-string">"model"</span>: {\n    <span class="hljs-string">"billing_address"</span>: {\n      <span class="hljs-string">"street_address"</span>: <span class="hljs-string">"21, Jump Street"</span>,\n      <span class="hljs-string">"city"</span>: <span class="hljs-string">"Babel"</span>,\n      <span class="hljs-string">"state"</span>: <span class="hljs-string">"Neverland"</span>\n    },\n    <span class="hljs-string">"shipping_address"</span>: {\n      <span class="hljs-string">"street_address"</span>: <span class="hljs-string">"221B, Baker Street"</span>,\n      <span class="hljs-string">"city"</span>: <span class="hljs-string">"London"</span>,\n      <span class="hljs-string">"state"</span>: <span class="hljs-string">"N/A"</span>\n    },\n    <span class="hljs-string">"tree"</span>: {\n      <span class="hljs-string">"name"</span>: <span class="hljs-string">"root"</span>,\n      <span class="hljs-string">"children"</span>: [\n        {\n          <span class="hljs-string">"name"</span>: <span class="hljs-string">"leaf"</span>\n        }\n      ]\n    }\n  }\n}'},xsVu:function(s,n){s.exports='\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin-bottom: 20px;"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let example of examples"</span>\n  (<span class="hljs-attr">click</span>)=<span class="hljs-string">"loadExample(example)"</span>\n  <span class="hljs-attr">class</span>=<span class="hljs-string">"btn"</span> [<span class="hljs-attr">class.btn-primary</span>]=<span class="hljs-string">"type === example"</span>&gt;</span>\n    {{ example }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"fields"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"!form.valid"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},xueC:function(s,n){s.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyJsonschema } from '@ngx-formly/core/json-schema';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form: FormGroup;\n  model: any;\n  options: FormlyFormOptions;\n  fields: FormlyFieldConfig[];\n\n  type: string;\n  examples = [\n    'simple',\n    'nested',\n    'arrays',\n    'numbers',\n    'references',\n    'schema_dependencies',\n    'null_field',\n    'nullable',\n    'allOf',\n    'anyOf',\n    'oneOf',\n    'select_alternatives',\n  ];\n\n  constructor(\n    private formlyJsonschema: FormlyJsonschema,\n    private http: HttpClient,\n  ) {\n    this.loadExample(this.examples[0]);\n  }\n\n  loadExample(type: string) {\n    this.http.get<any>(`assets/json-schema/${type}_json`).pipe(\n      tap(({ schema, model }) => {\n        this.type = type;\n        this.form = new FormGroup({});\n        this.options = {};\n        this.fields = [this.formlyJsonschema.toFieldConfig(schema)];\n        this.model = model;\n      }),\n    ).subscribe();\n  }\n\n  submit() {\n    alert(JSON.stringify(this.model));\n  }\n}\n"}}]);