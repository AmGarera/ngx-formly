(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"2Qnz":function(a,n){a.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"!form.valid"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},INqo:function(a,n){a.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'marvel1\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Normal Select\'</span>,\n        options: [\n          { label: <span class="hljs-string">\'Iron Man\'</span>, value: <span class="hljs-string">\'iron_man\'</span> },\n          { label: <span class="hljs-string">\'Captain America\'</span>, value: <span class="hljs-string">\'captain_america\'</span> },\n          { label: <span class="hljs-string">\'Black Widow\'</span>, value: <span class="hljs-string">\'black_widow\'</span> },\n          { label: <span class="hljs-string">\'Hulk\'</span>, value: <span class="hljs-string">\'hulk\'</span> },\n          { label: <span class="hljs-string">\'Captain Marvel\'</span>, value: <span class="hljs-string">\'captain_marvel\'</span> },\n        ],\n      },\n    },\n    {\n      key: <span class="hljs-string">\'marvel2\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Grouped Select\'</span>,\n        options: [\n          { label: <span class="hljs-string">\'Iron Man\'</span>, value: <span class="hljs-string">\'iron_man\'</span>, group: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Captain America\'</span>, value: <span class="hljs-string">\'captain_america\'</span>, group: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Black Widow\'</span>, value: <span class="hljs-string">\'black_widow\'</span>, group: <span class="hljs-string">\'Female\'</span> },\n          { label: <span class="hljs-string">\'Hulk\'</span>, value: <span class="hljs-string">\'hulk\'</span>, group: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Captain Marvel\'</span>, value: <span class="hljs-string">\'captain_marvel\'</span>, group: <span class="hljs-string">\'Female\'</span> },\n        ],\n      },\n    },\n    {\n      key: <span class="hljs-string">\'marvel3\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Select with custom name/value/group\'</span>,\n        options: [\n          { label: <span class="hljs-string">\'Iron Man\'</span>, id: <span class="hljs-string">\'iron_man\'</span>, gender: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Captain America\'</span>, id: <span class="hljs-string">\'captain_america\'</span>, gender: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Black Widow\'</span>, id: <span class="hljs-string">\'black_widow\'</span>, gender: <span class="hljs-string">\'Female\'</span> },\n          { label: <span class="hljs-string">\'Hulk\'</span>, id: <span class="hljs-string">\'hulk\'</span>, gender: <span class="hljs-string">\'Male\'</span> },\n          { label: <span class="hljs-string">\'Captain Marvel\'</span>, id: <span class="hljs-string">\'captain_marvel\'</span>, gender: <span class="hljs-string">\'Female\'</span> },\n        ],\n        groupProp: <span class="hljs-string">\'gender\'</span>,\n        valueProp: <span class="hljs-string">\'id\'</span>,\n        labelProp: <span class="hljs-string">\'label\'</span>,\n      },\n    },\n    {\n      key: <span class="hljs-string">\'multiselect\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Multi-select\'</span>,\n        multiple: <span class="hljs-literal">true</span>,\n        options: [\n          { label: <span class="hljs-string">\'Iron Man\'</span>, value: <span class="hljs-string">\'iron_man\'</span> },\n          { label: <span class="hljs-string">\'Captain America\'</span>, value: <span class="hljs-string">\'captain_america\'</span> },\n          { label: <span class="hljs-string">\'Black Widow\'</span>, value: <span class="hljs-string">\'black_widow\'</span> },\n          { label: <span class="hljs-string">\'Hulk\'</span>, value: <span class="hljs-string">\'hulk\'</span> },\n          { label: <span class="hljs-string">\'Captain Marvel\'</span>, value: <span class="hljs-string">\'captain_marvel\'</span> },\n        ],\n      },\n    },\n  ];\n\n  submit() {\n    alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n  }\n}\n'},KiyI:function(a,n,s){"use strict";s.r(n),n.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormlyBootstrapModule, FormlyModule.forRoot()],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},NpRT:function(a,n,s){"use strict";s.r(n),n.default='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button" [disabled]="!form.valid">Submit</button>\n</form>\n'},bhfn:function(a,n,s){"use strict";s.r(n),n.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'marvel1',\n      type: 'select',\n      templateOptions: {\n        label: 'Normal Select',\n        options: [\n          { label: 'Iron Man', value: 'iron_man' },\n          { label: 'Captain America', value: 'captain_america' },\n          { label: 'Black Widow', value: 'black_widow' },\n          { label: 'Hulk', value: 'hulk' },\n          { label: 'Captain Marvel', value: 'captain_marvel' },\n        ],\n      },\n    },\n    {\n      key: 'marvel2',\n      type: 'select',\n      templateOptions: {\n        label: 'Grouped Select',\n        options: [\n          { label: 'Iron Man', value: 'iron_man', group: 'Male' },\n          { label: 'Captain America', value: 'captain_america', group: 'Male' },\n          { label: 'Black Widow', value: 'black_widow', group: 'Female' },\n          { label: 'Hulk', value: 'hulk', group: 'Male' },\n          { label: 'Captain Marvel', value: 'captain_marvel', group: 'Female' },\n        ],\n      },\n    },\n    {\n      key: 'marvel3',\n      type: 'select',\n      templateOptions: {\n        label: 'Select with custom name/value/group',\n        options: [\n          { label: 'Iron Man', id: 'iron_man', gender: 'Male' },\n          { label: 'Captain America', id: 'captain_america', gender: 'Male' },\n          { label: 'Black Widow', id: 'black_widow', gender: 'Female' },\n          { label: 'Hulk', id: 'hulk', gender: 'Male' },\n          { label: 'Captain Marvel', id: 'captain_marvel', gender: 'Female' },\n        ],\n        groupProp: 'gender',\n        valueProp: 'id',\n        labelProp: 'label',\n      },\n    },\n    {\n      key: 'multiselect',\n      type: 'select',\n      templateOptions: {\n        label: 'Multi-select',\n        multiple: true,\n        options: [\n          { label: 'Iron Man', value: 'iron_man' },\n          { label: 'Captain America', value: 'captain_america' },\n          { label: 'Black Widow', value: 'black_widow' },\n          { label: 'Hulk', value: 'hulk' },\n          { label: 'Captain Marvel', value: 'captain_marvel' },\n        ],\n      },\n    },\n  ];\n\n  submit() {\n    alert(JSON.stringify(this.model));\n  }\n}\n"},kAe4:function(a,n,s){"use strict";s.r(n);var l=s("Mlb/"),e=s("QZuW"),p=function(){function a(){this.form=new e.FormGroup({}),this.model={},this.options={},this.fields=[{key:"marvel1",type:"select",templateOptions:{label:"Normal Select",options:[{label:"Iron Man",value:"iron_man"},{label:"Captain America",value:"captain_america"},{label:"Black Widow",value:"black_widow"},{label:"Hulk",value:"hulk"},{label:"Captain Marvel",value:"captain_marvel"}]}},{key:"marvel2",type:"select",templateOptions:{label:"Grouped Select",options:[{label:"Iron Man",value:"iron_man",group:"Male"},{label:"Captain America",value:"captain_america",group:"Male"},{label:"Black Widow",value:"black_widow",group:"Female"},{label:"Hulk",value:"hulk",group:"Male"},{label:"Captain Marvel",value:"captain_marvel",group:"Female"}]}},{key:"marvel3",type:"select",templateOptions:{label:"Select with custom name/value/group",options:[{label:"Iron Man",id:"iron_man",gender:"Male"},{label:"Captain America",id:"captain_america",gender:"Male"},{label:"Black Widow",id:"black_widow",gender:"Female"},{label:"Hulk",id:"hulk",gender:"Male"},{label:"Captain Marvel",id:"captain_marvel",gender:"Female"}],groupProp:"gender",valueProp:"id",labelProp:"label"}},{key:"multiselect",type:"select",templateOptions:{label:"Multi-select",multiple:!0,options:[{label:"Iron Man",value:"iron_man"},{label:"Captain America",value:"captain_america"},{label:"Black Widow",value:"black_widow"},{label:"Hulk",value:"hulk"},{label:"Captain Marvel",value:"captain_marvel"}]}}]}return a.prototype.submit=function(){alert(JSON.stringify(this.model))},a}(),o={examples:[{title:"Select",description:"\n              Here are all of the options you have available to you with the\n              <code>select</code> type from <code>@ngx-formly/bootstrap</code>\n            ",component:p,files:[{file:"app.component.html",content:s("2Qnz"),filecontent:s("NpRT")},{file:"app.component.ts",content:s("INqo"),filecontent:s("bhfn")},{file:"app.module.ts",content:s("oKw4"),filecontent:s("KiyI")}]}]},t=function(){},r=s("n91+"),i=s("aUi8"),m=s("xRU+"),c=s("l9Gt"),u=s("tb2p"),d=s("5swT"),g=s("rGUg"),h=s("qEw3"),b=s("KL5v"),f=s("WPgD"),j=s("wR1y"),v=s("fYis"),y=s("mSm0"),k=s("g/x9"),w=s("Ea/l"),M=s("kY9M"),_=s("cXvR"),C=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function F(a){return l["\u0275vid"](0,[(a()(),l["\u0275eld"](0,0,null,null,9,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],(function(a,n,s){var e=!0,p=a.component;return"submit"===n&&(e=!1!==l["\u0275nov"](a,2).onSubmit(s)&&e),"reset"===n&&(e=!1!==l["\u0275nov"](a,2).onReset()&&e),"ngSubmit"===n&&(e=!1!==p.submit()&&e),e}),null,null)),l["\u0275did"](1,16384,null,0,e["\u0275angular_packages_forms_forms_z"],[],null,null),l["\u0275did"](2,540672,null,0,e.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),l["\u0275prd"](2048,null,e.ControlContainer,null,[e.FormGroupDirective]),l["\u0275did"](4,16384,null,0,e.NgControlStatusGroup,[[4,e.ControlContainer]],null,null),(a()(),l["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,k.b,k.a)),l["\u0275prd"](512,null,w.a,w.a,[M.b,l.ComponentFactoryResolver,l.Injector,[2,e.FormGroupDirective]]),l["\u0275did"](7,966656,null,0,_.a,[w.a,M.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null),(a()(),l["\u0275eld"](8,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],[[8,"disabled",0]],null,null,null,null)),(a()(),l["\u0275ted"](-1,null,["Submit"]))],(function(a,n){var s=n.component;a(n,2,0,s.form),a(n,7,0,s.form,s.model,s.fields,s.options)}),(function(a,n){var s=n.component;a(n,0,0,l["\u0275nov"](n,4).ngClassUntouched,l["\u0275nov"](n,4).ngClassTouched,l["\u0275nov"](n,4).ngClassPristine,l["\u0275nov"](n,4).ngClassDirty,l["\u0275nov"](n,4).ngClassValid,l["\u0275nov"](n,4).ngClassInvalid,l["\u0275nov"](n,4).ngClassPending),a(n,8,0,!s.form.valid)}))}var S=l["\u0275ccf"]("formly-app-example",p,(function(a){return l["\u0275vid"](0,[(a()(),l["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,F,C)),l["\u0275did"](1,49152,null,0,p,[],null,null)],null,null)}),{},{},[]),x=s("vk2e"),A=s("o3+a"),N=s("9b0e"),R=s("6YJn"),I=s("dvHj"),O=s("C0xW"),W=s("W9sv"),B=s("m6lo"),G=s("S6Ld"),P=s("cTZo"),H=s("Kfqh"),L=s("Ienz"),K=s("KuLc"),T=s("Z7++"),U=s("2lML"),D=s("pgVP"),J=s("pk7F"),q=s("T8+l"),z=s("0hby"),V=s("tVba"),Y=s("XX7/"),E=s("pLrJ"),X=s("U5/R"),Z=s("TqxR"),Q=s("soK0"),$=s("1k+g"),aa=s("pAed"),na=s("VtvF"),sa=s("lN7U"),la=s("NPi3"),ea=s("PCNd"),pa=s("WCiw"),oa=s("Vtge"),ta=s("+5Wd"),ra=s("+R4m"),ia=s("SSYk"),ma=s("KJU8"),ca=s("eTA3"),ua=s("o12O"),da=s("iWYX"),ga=s("h18T"),ha=function(){},ba=s("qk26"),fa=s("P+xK");s.d(n,"ConfigModuleNgFactory",(function(){return ja}));var ja=l["\u0275cmf"](t,[],(function(a){return l["\u0275mod"]([l["\u0275mpd"](512,l.ComponentFactoryResolver,l["\u0275CodegenComponentFactoryResolver"],[[8,[r.a,i.a,m.a,c.a,u.a,d.a,g.a,h.a,b.a,f.a,j.a,v.a,y.a,S]],[3,l.ComponentFactoryResolver],l.NgModuleRef]),l["\u0275mpd"](4608,x.NgLocalization,x.NgLocaleLocalization,[l.LOCALE_ID,[2,x["\u0275angular_packages_common_common_a"]]]),l["\u0275mpd"](4608,A.c,A.c,[]),l["\u0275mpd"](4608,N.d,N.d,[N.j,N.f,l.ComponentFactoryResolver,N.i,N.g,l.Injector,l.NgZone,x.DOCUMENT,R.b,[2,x.Location]]),l["\u0275mpd"](5120,N.k,N.l,[N.d]),l["\u0275mpd"](5120,I.b,I.c,[N.d]),l["\u0275mpd"](4608,O.e,W.c,[[2,W.g],[2,W.l]]),l["\u0275mpd"](5120,B.c,B.j,[N.d]),l["\u0275mpd"](4608,G.a,G.a,[]),l["\u0275mpd"](4608,P.a,P.a,[]),l["\u0275mpd"](4608,e.FormBuilder,e.FormBuilder,[]),l["\u0275mpd"](4608,e["\u0275angular_packages_forms_forms_o"],e["\u0275angular_packages_forms_forms_o"],[]),l["\u0275mpd"](4608,w.a,w.a,[M.b,l.ComponentFactoryResolver,l.Injector,[2,e.FormGroupDirective]]),l["\u0275mpd"](1073742336,x.CommonModule,x.CommonModule,[]),l["\u0275mpd"](1073742336,H.b,H.b,[]),l["\u0275mpd"](1073742336,A.d,A.d,[]),l["\u0275mpd"](1073742336,L.a,L.a,[]),l["\u0275mpd"](1073742336,R.a,R.a,[]),l["\u0275mpd"](1073742336,K.g,K.g,[]),l["\u0275mpd"](1073742336,T.ScrollingModule,T.ScrollingModule,[]),l["\u0275mpd"](1073742336,N.h,N.h,[]),l["\u0275mpd"](1073742336,W.l,W.l,[[2,W.d],[2,O.f]]),l["\u0275mpd"](1073742336,I.e,I.e,[]),l["\u0275mpd"](1073742336,W.v,W.v,[]),l["\u0275mpd"](1073742336,U.j,U.j,[]),l["\u0275mpd"](1073742336,B.i,B.i,[]),l["\u0275mpd"](1073742336,B.f,B.f,[]),l["\u0275mpd"](1073742336,D.c,D.c,[]),l["\u0275mpd"](1073742336,J.c,J.c,[]),l["\u0275mpd"](1073742336,q.b,q.b,[]),l["\u0275mpd"](512,M.b,M.b,[]),l["\u0275mpd"](1024,M.a,(function(a){return[{wrappers:[{name:"form-field",component:z.a}]},{types:[{name:"input",component:V.a,wrappers:["form-field"]}]},{types:[{name:"textarea",component:Y.a,wrappers:["form-field"]}]},{types:[{name:"radio",component:E.a,wrappers:["form-field"]}]},{types:[{name:"checkbox",component:X.a,wrappers:["form-field"]}]},{types:[{name:"multicheckbox",component:Z.a,wrappers:["form-field"]}]},{types:[{name:"select",component:Q.a,wrappers:["form-field"]}]},{wrappers:[{name:"addons",component:$.a}],extensions:[{name:"addons",extension:{postPopulate:aa.a}}]},na.b(a),{}]}),[M.b]),l["\u0275mpd"](1073742336,na.a,na.a,[M.b,[2,M.a]]),l["\u0275mpd"](1073742336,sa.h,sa.h,[]),l["\u0275mpd"](1073742336,la.b,la.b,[]),l["\u0275mpd"](1073742336,ea.a,ea.a,[]),l["\u0275mpd"](1073742336,e["\u0275angular_packages_forms_forms_d"],e["\u0275angular_packages_forms_forms_d"],[]),l["\u0275mpd"](1073742336,e.ReactiveFormsModule,e.ReactiveFormsModule,[]),l["\u0275mpd"](1073742336,pa.a,pa.a,[]),l["\u0275mpd"](1073742336,oa.a,oa.a,[]),l["\u0275mpd"](1073742336,ta.a,ta.a,[]),l["\u0275mpd"](1073742336,ra.a,ra.a,[]),l["\u0275mpd"](1073742336,ia.a,ia.a,[]),l["\u0275mpd"](1073742336,ma.a,ma.a,[]),l["\u0275mpd"](1073742336,ca.a,ca.a,[]),l["\u0275mpd"](1073742336,ua.a,ua.a,[]),l["\u0275mpd"](1073742336,da.a,da.a,[]),l["\u0275mpd"](1073742336,ga.a,ga.a,[]),l["\u0275mpd"](1073742336,ha,ha,[]),l["\u0275mpd"](1073742336,ba.t,ba.t,[[2,ba.y],[2,ba.p]]),l["\u0275mpd"](1073742336,t,t,[]),l["\u0275mpd"](1024,ba.n,(function(){return[[{path:"",component:fa.a,data:o}]]}),[])])}))},oKw4:function(a,n){a.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n<span class="hljs-meta">@NgModule</span>({\n  imports: [CommonModule, ReactiveFormsModule, FormlyBootstrapModule, FormlyModule.forRoot()],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'}}]);