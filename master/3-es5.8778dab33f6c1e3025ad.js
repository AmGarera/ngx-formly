(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"/eAS":function(n,s,l){"use strict";l.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Textarea',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Textarea',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n      },\n    },\n  ];\n}\n"},"0mXY":function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},"2nDK":function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},"4CPo":function(n,s,l){"use strict";l.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Select',\n      type: 'select',\n      templateOptions: {\n        label: 'Select',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n        options: [\n          { value: 1, label: 'Option 1' },\n          { value: 2, label: 'Option 2' },\n          { value: 3, label: 'Option 3' },\n          { value: 4, label: 'Option 4' },\n        ],\n      },\n    },\n    {\n      key: 'select_multi',\n      type: 'select',\n      templateOptions: {\n        label: 'Select Multiple',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n        multiple: true,\n        selectAllOption: 'Select All',\n        options: [\n          { value: 1, label: 'Option 1' },\n          { value: 2, label: 'Option 2' },\n          { value: 3, label: 'Option 3' },\n          { value: 4, label: 'Option 4' },\n        ],\n      },\n    },\n  ];\n}\n"},"68/e":function(n,s,l){"use strict";l.r(s),s.default='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},"6fmT":function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Radio\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'radio\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Radio\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n        options: [\n          { value: <span class="hljs-number">1</span>, label: <span class="hljs-string">\'Option 1\'</span> },\n          { value: <span class="hljs-number">2</span>, label: <span class="hljs-string">\'Option 2\'</span> },\n          { value: <span class="hljs-number">3</span>, label: <span class="hljs-string">\'Option 3\'</span> },\n          { value: <span class="hljs-number">4</span>, label: <span class="hljs-string">\'Option 4\'</span> },\n        ],\n      },\n    },\n  ];\n}\n'},"7GSz":function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},"8sv7":function(n,s,l){"use strict";l.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: 'required', message: 'This field is required' }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},AS3e:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},CCR8:function(n,s,l){"use strict";l.r(s),s.default='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},DmpF:function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},FoGv:function(n,s,l){"use strict";l.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: 'required', message: 'This field is required' }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},Ieh7:function(n,s,l){"use strict";l.d(s,"a",(function(){return u}));var a=l("Mlb/"),o=l("QZuW"),e=l("g/x9"),r=l("Ea/l"),p=l("kY9M"),t=l("cXvR"),i=l("t92Q"),m=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],(function(n,s,l){var o=!0;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),o}),null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_z"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),a["\u0275prd"](512,null,r.a,r.a,[p.b,a.ComponentFactoryResolver,a.Injector,[2,o.FormGroupDirective]]),a["\u0275did"](7,966656,null,0,t.a,[r.a,p.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],(function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)}),(function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)}))}var u=a["\u0275ccf"]("formly-app-example",i.a,(function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),a["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}),{},{},[])},KJ3b:function(n,s,l){"use strict";l.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Input',\n      type: 'input',\n      templateOptions: {\n        label: 'Input',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n      },\n    },\n  ];\n}\n"},KUrZ:function(n,s,l){"use strict";l.r(s),s.default='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},NmW7:function(n,s,l){"use strict";l.d(s,"a",(function(){return o}));var a=l("QZuW"),o=function(){this.form=new a.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Textarea",type:"textarea",templateOptions:{label:"Textarea",placeholder:"Placeholder",description:"Description",required:!0}}]}},PIGL:function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},Pl2W:function(n,s,l){"use strict";l.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Checkbox',\n      type: 'checkbox',\n      templateOptions: {\n        label: 'Accept terms',\n        description: 'In order to proceed, please accept terms',\n        pattern: 'true',\n        required: true,\n      },\n      validation: {\n        messages: {\n          pattern: 'Please accept the terms',\n        },\n      },\n    },\n  ];\n}\n"},R0md:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},RHQo:function(n,s,l){"use strict";l.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: 'required', message: 'This field is required' }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},S1CK:function(n,s,l){"use strict";l.r(s),s.default='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},WOKa:function(n,s,l){"use strict";l.d(s,"a",(function(){return u}));var a=l("Mlb/"),o=l("QZuW"),e=l("g/x9"),r=l("Ea/l"),p=l("kY9M"),t=l("cXvR"),i=l("NmW7"),m=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],(function(n,s,l){var o=!0;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),o}),null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_z"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),a["\u0275prd"](512,null,r.a,r.a,[p.b,a.ComponentFactoryResolver,a.Injector,[2,o.FormGroupDirective]]),a["\u0275did"](7,966656,null,0,t.a,[r.a,p.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],(function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)}),(function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)}))}var u=a["\u0275ccf"]("formly-app-example",i.a,(function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),a["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}),{},{},[])},X4l2:function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},bvMs:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},cEMu:function(n,s,l){"use strict";l.d(s,"a",(function(){return o}));var a=l("QZuW"),o=function(){this.form=new a.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Radio",type:"radio",templateOptions:{label:"Radio",placeholder:"Placeholder",description:"Description",required:!0,options:[{value:1,label:"Option 1"},{value:2,label:"Option 2"},{value:3,label:"Option 3"},{value:4,label:"Option 4"}]}}]}},eS7Y:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},f4rE:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},fBUl:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},ftpy:function(n,s,l){"use strict";l.d(s,"a",(function(){return o}));var a=l("QZuW"),o=function(){this.form=new a.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Select",type:"select",templateOptions:{label:"Select",placeholder:"Placeholder",description:"Description",required:!0,options:[{value:1,label:"Option 1"},{value:2,label:"Option 2"},{value:3,label:"Option 3"},{value:4,label:"Option 4"}]}},{key:"select_multi",type:"select",templateOptions:{label:"Select Multiple",placeholder:"Placeholder",description:"Description",required:!0,multiple:!0,selectAllOption:"Select All",options:[{value:1,label:"Option 1"},{value:2,label:"Option 2"},{value:3,label:"Option 3"},{value:4,label:"Option 4"}]}}]}},g5xj:function(n,s,l){"use strict";l.d(s,"a",(function(){return u}));var a=l("Mlb/"),o=l("QZuW"),e=l("g/x9"),r=l("Ea/l"),p=l("kY9M"),t=l("cXvR"),i=l("cEMu"),m=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],(function(n,s,l){var o=!0;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),o}),null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_z"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),a["\u0275prd"](512,null,r.a,r.a,[p.b,a.ComponentFactoryResolver,a.Injector,[2,o.FormGroupDirective]]),a["\u0275did"](7,966656,null,0,t.a,[r.a,p.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],(function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)}),(function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)}))}var u=a["\u0275ccf"]("formly-app-example",i.a,(function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),a["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}),{},{},[])},grsn:function(n,s,l){"use strict";l("7GSz");var a={title:"Input type",component:l("t92Q").a,debug:!0,files:[{file:"app.component.html",content:l("fBUl"),filecontent:l("KUrZ")},{file:"app.component.ts",content:l("uyL5"),filecontent:l("KJ3b")},{file:"app.module.ts",content:l("0mXY"),filecontent:l("FoGv")}]},o=l("NmW7");l("PIGL");var e={title:"Textarea type",component:o.a,debug:!0,files:[{file:"app.component.html",content:l("bvMs"),filecontent:l("68/e")},{file:"app.component.ts",content:l("sSYP"),filecontent:l("/eAS")},{file:"app.module.ts",content:l("lGFb"),filecontent:l("8sv7")}]};l("DmpF");var r={title:"Checkbox type",component:l("pXxX").a,debug:!0,files:[{file:"app.component.html",content:l("eS7Y"),filecontent:l("CCR8")},{file:"app.component.ts",content:l("yqz1"),filecontent:l("Pl2W")},{file:"app.module.ts",content:l("R0md"),filecontent:l("rRZg")}]};l("p3No");var p={title:"Radio type",component:l("cEMu").a,debug:!0,files:[{file:"app.component.html",content:l("AS3e"),filecontent:l("S1CK")},{file:"app.component.ts",content:l("6fmT"),filecontent:l("zh3d")},{file:"app.module.ts",content:l("kz9J"),filecontent:l("j+eF")}]};l("n899");var t={title:"Select type",component:l("ftpy").a,debug:!0,files:[{file:"app.component.html",content:l("2nDK"),filecontent:l("pO5c")},{file:"app.component.ts",content:l("vWWH"),filecontent:l("4CPo")},{file:"app.module.ts",content:l("f4rE"),filecontent:l("RHQo")}]};l("X4l2"),l.d(s,"a",(function(){return i})),l.d(s,"b",(function(){return m}));var i=[a,e,r,p,t],m=[{key:"templateOptions",fieldGroupClassName:"row",fieldGroup:[{key:"label",type:"input",className:"col-md-6",templateOptions:{label:"label"}},{key:"hideLabel",className:"col-md-6",type:"checkbox",templateOptions:{label:"hideLabel"}},{key:"required",className:"col-md-6",type:"checkbox",templateOptions:{label:"required"}},{key:"hideRequiredMarker",className:"col-md-6",type:"checkbox",templateOptions:{label:"hideRequiredMarker"}},{key:"description",className:"col-md-6",type:"input",templateOptions:{label:"description"}}]}]},"j+eF":function(n,s,l){"use strict";l.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: 'required', message: 'This field is required' }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},kz9J:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},lGFb:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},n899:function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},ogdc:function(n,s,l){"use strict";l.d(s,"a",(function(){return u}));var a=l("Mlb/"),o=l("QZuW"),e=l("g/x9"),r=l("Ea/l"),p=l("kY9M"),t=l("cXvR"),i=l("ftpy"),m=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],(function(n,s,l){var o=!0;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),o}),null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_z"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),a["\u0275prd"](512,null,r.a,r.a,[p.b,a.ComponentFactoryResolver,a.Injector,[2,o.FormGroupDirective]]),a["\u0275did"](7,966656,null,0,t.a,[r.a,p.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],(function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)}),(function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)}))}var u=a["\u0275ccf"]("formly-app-example",i.a,(function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),a["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}),{},{},[])},p3No:function(n,s,l){"use strict";l.d(s,"a",(function(){return a}));var a=function(){}},pO5c:function(n,s,l){"use strict";l.r(s),s.default='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},pXxX:function(n,s,l){"use strict";l.d(s,"a",(function(){return o}));var a=l("QZuW"),o=function(){this.form=new a.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Checkbox",type:"checkbox",templateOptions:{label:"Accept terms",description:"In order to proceed, please accept terms",pattern:"true",required:!0},validation:{messages:{pattern:"Please accept the terms"}}}]}},rRZg:function(n,s,l){"use strict";l.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [{ name: 'required', message: 'This field is required' }],\n    }),\n  ],\n  declarations: [AppComponent],\n})\nexport class AppModule {}\n"},sSYP:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Textarea\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'textarea\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Textarea\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n    },\n  ];\n}\n'},t92Q:function(n,s,l){"use strict";l.d(s,"a",(function(){return o}));var a=l("QZuW"),o=function(){this.form=new a.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Input",type:"input",templateOptions:{label:"Input",placeholder:"Placeholder",description:"Description",required:!0}}]}},uyL5:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Input\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Input\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n    },\n  ];\n}\n'},v5tZ:function(n,s,l){"use strict";l.d(s,"a",(function(){return u}));var a=l("Mlb/"),o=l("QZuW"),e=l("g/x9"),r=l("Ea/l"),p=l("kY9M"),t=l("cXvR"),i=l("pXxX"),m=a["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],(function(n,s,l){var o=!0;return"submit"===s&&(o=!1!==a["\u0275nov"](n,2).onSubmit(l)&&o),"reset"===s&&(o=!1!==a["\u0275nov"](n,2).onReset()&&o),o}),null,null)),a["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_z"],[],null,null),a["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),a["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),a["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),a["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),a["\u0275prd"](512,null,r.a,r.a,[p.b,a.ComponentFactoryResolver,a.Injector,[2,o.FormGroupDirective]]),a["\u0275did"](7,966656,null,0,t.a,[r.a,p.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],(function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)}),(function(n,s){n(s,0,0,a["\u0275nov"](s,4).ngClassUntouched,a["\u0275nov"](s,4).ngClassTouched,a["\u0275nov"](s,4).ngClassPristine,a["\u0275nov"](s,4).ngClassDirty,a["\u0275nov"](s,4).ngClassValid,a["\u0275nov"](s,4).ngClassInvalid,a["\u0275nov"](s,4).ngClassPending)}))}var u=a["\u0275ccf"]("formly-app-example",i.a,(function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),a["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}),{},{},[])},vWWH:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFieldConfig, FormlyFormOptions } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Select\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Select\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n        options: [\n          { value: <span class="hljs-number">1</span>, label: <span class="hljs-string">\'Option 1\'</span> },\n          { value: <span class="hljs-number">2</span>, label: <span class="hljs-string">\'Option 2\'</span> },\n          { value: <span class="hljs-number">3</span>, label: <span class="hljs-string">\'Option 3\'</span> },\n          { value: <span class="hljs-number">4</span>, label: <span class="hljs-string">\'Option 4\'</span> },\n        ],\n      },\n    },\n    {\n      key: <span class="hljs-string">\'select_multi\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Select Multiple\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n        multiple: <span class="hljs-literal">true</span>,\n        selectAllOption: <span class="hljs-string">\'Select All\'</span>,\n        options: [\n          { value: <span class="hljs-number">1</span>, label: <span class="hljs-string">\'Option 1\'</span> },\n          { value: <span class="hljs-number">2</span>, label: <span class="hljs-string">\'Option 2\'</span> },\n          { value: <span class="hljs-number">3</span>, label: <span class="hljs-string">\'Option 3\'</span> },\n          { value: <span class="hljs-number">4</span>, label: <span class="hljs-string">\'Option 4\'</span> },\n        ],\n      },\n    },\n  ];\n}\n'},yqz1:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Checkbox\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'checkbox\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Accept terms\'</span>,\n        description: <span class="hljs-string">\'In order to proceed, please accept terms\'</span>,\n        pattern: <span class="hljs-string">\'true\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n      validation: {\n        messages: {\n          pattern: <span class="hljs-string">\'Please accept the terms\'</span>,\n        },\n      },\n    },\n  ];\n}\n'},zh3d:function(n,s,l){"use strict";l.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Radio',\n      type: 'radio',\n      templateOptions: {\n        label: 'Radio',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n        options: [\n          { value: 1, label: 'Option 1' },\n          { value: 2, label: 'Option 2' },\n          { value: 3, label: 'Option 3' },\n          { value: 4, label: 'Option 4' },\n        ],\n      },\n    },\n  ];\n}\n"}}]);