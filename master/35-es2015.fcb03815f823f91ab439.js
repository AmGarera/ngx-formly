(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{"4RVN":function(n,s,a){"use strict";a.r(s),s.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AnimationWrapperComponent } from './animation-wrapper.component';\nimport { AppComponent } from './app.component';\n\nexport function animationExtension(field: FormlyFieldConfig) {\n  if (field.wrappers && field.wrappers.includes('animation')) {\n    return;\n  }\n\n  field.wrappers = ['animation', ...(field.wrappers || [])];\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      wrappers: [{ name: 'animation', component: AnimationWrapperComponent }],\n      extensions: [{ name: 'animation', extension: { onPopulate: animationExtension } }],\n    }),\n  ],\n  declarations: [AppComponent, AnimationWrapperComponent],\n})\nexport class AppModule {}\n"},EfTc:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n\n<span class="hljs-keyword">import</span> { AnimationWrapperComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./animation-wrapper.component\'</span>;\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animationExtension</span>(<span class="hljs-params">field: FormlyFieldConfig</span>) </span>{\n  <span class="hljs-keyword">if</span> (field.wrappers &amp;&amp; field.wrappers.includes(<span class="hljs-string">\'animation\'</span>)) {\n    <span class="hljs-keyword">return</span>;\n  }\n\n  field.wrappers = [<span class="hljs-string">\'animation\'</span>, ...(field.wrappers || [])];\n}\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      wrappers: [{ name: <span class="hljs-string">\'animation\'</span>, component: AnimationWrapperComponent }],\n      extensions: [{ name: <span class="hljs-string">\'animation\'</span>, extension: { onPopulate: animationExtension } }],\n    }),\n  ],\n  declarations: [AppComponent, AnimationWrapperComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule {}\n'},GHF8:function(n,s,a){"use strict";a.r(s),s.default='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button">Submit</button>\n</form>\n'},RtCI:function(n,s,a){"use strict";a.r(s),s.default="import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\nimport { trigger, state, style, transition, animate, group } from '@angular/animations';\n\nconst SlideInOutAnimation = [\n  trigger('slideInOut', [\n    state(\n      'in',\n      style({\n        'max-height': '500px',\n        opacity: '1',\n        visibility: 'visible',\n      }),\n    ),\n    state(\n      'out',\n      style({\n        'max-height': '0px',\n        opacity: '0',\n        visibility: 'hidden',\n      }),\n    ),\n    transition('in => out', [\n      group([\n        animate(\n          '400ms ease-in-out',\n          style({\n            opacity: '0',\n          }),\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '0px',\n          }),\n        ),\n        animate(\n          '700ms ease-in-out',\n          style({\n            visibility: 'hidden',\n          }),\n        ),\n      ]),\n    ]),\n    transition('out => in', [\n      group([\n        animate(\n          '1ms ease-in-out',\n          style({\n            visibility: 'visible',\n          }),\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '500px',\n          }),\n        ),\n        animate(\n          '800ms ease-in-out',\n          style({\n            opacity: '1',\n          }),\n        ),\n      ]),\n    ]),\n  ]),\n];\n\n@Component({\n  selector: 'formly-wrapper-animation',\n  template: `\n    <div [@slideInOut]=\"field.hide ? 'out' : 'in'\">\n      <ng-container #fieldComponent></ng-container>\n    </div>\n  `,\n  animations: [SlideInOutAnimation],\n})\nexport class AnimationWrapperComponent extends FieldWrapper {}\n"},UMPM:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},eMep:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FieldWrapper } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { trigger, state, style, transition, animate, group } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/animations\'</span>;\n\n<span class="hljs-keyword">const</span> SlideInOutAnimation = [\n  trigger(<span class="hljs-string">\'slideInOut\'</span>, [\n    state(\n      <span class="hljs-string">\'in\'</span>,\n      style({\n        <span class="hljs-string">\'max-height\'</span>: <span class="hljs-string">\'500px\'</span>,\n        opacity: <span class="hljs-string">\'1\'</span>,\n        visibility: <span class="hljs-string">\'visible\'</span>,\n      }),\n    ),\n    state(\n      <span class="hljs-string">\'out\'</span>,\n      style({\n        <span class="hljs-string">\'max-height\'</span>: <span class="hljs-string">\'0px\'</span>,\n        opacity: <span class="hljs-string">\'0\'</span>,\n        visibility: <span class="hljs-string">\'hidden\'</span>,\n      }),\n    ),\n    transition(<span class="hljs-string">\'in =&gt; out\'</span>, [\n      group([\n        animate(\n          <span class="hljs-string">\'400ms ease-in-out\'</span>,\n          style({\n            opacity: <span class="hljs-string">\'0\'</span>,\n          }),\n        ),\n        animate(\n          <span class="hljs-string">\'600ms ease-in-out\'</span>,\n          style({\n            <span class="hljs-string">\'max-height\'</span>: <span class="hljs-string">\'0px\'</span>,\n          }),\n        ),\n        animate(\n          <span class="hljs-string">\'700ms ease-in-out\'</span>,\n          style({\n            visibility: <span class="hljs-string">\'hidden\'</span>,\n          }),\n        ),\n      ]),\n    ]),\n    transition(<span class="hljs-string">\'out =&gt; in\'</span>, [\n      group([\n        animate(\n          <span class="hljs-string">\'1ms ease-in-out\'</span>,\n          style({\n            visibility: <span class="hljs-string">\'visible\'</span>,\n          }),\n        ),\n        animate(\n          <span class="hljs-string">\'600ms ease-in-out\'</span>,\n          style({\n            <span class="hljs-string">\'max-height\'</span>: <span class="hljs-string">\'500px\'</span>,\n          }),\n        ),\n        animate(\n          <span class="hljs-string">\'800ms ease-in-out\'</span>,\n          style({\n            opacity: <span class="hljs-string">\'1\'</span>,\n          }),\n        ),\n      ]),\n    ]),\n  ]),\n];\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-wrapper-animation\'</span>,\n  template: <span class="hljs-string">`\n    &lt;div [@slideInOut]="field.hide ? \'out\' : \'in\'"&gt;\n      &lt;ng-container #fieldComponent&gt;&lt;/ng-container&gt;\n    &lt;/div&gt;\n  `</span>,\n  animations: [SlideInOutAnimation],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AnimationWrapperComponent <span class="hljs-keyword">extends</span> FieldWrapper {}\n'},qY25:function(n,s,a){"use strict";a.r(s);var l=a("Mlb/"),t=a("QZuW");class e{constructor(){this.form=new t.FormGroup({}),this.model={},this.options={},this.fields=[{key:"firstName",type:"input",templateOptions:{label:"First name",placeholder:"Type in here to display the hidden field using slideInOut animation"}},{key:"lastname",type:"input",hideExpression:n=>!this.model.firstName,templateOptions:{label:"Last name"}}]}submit(){this.form.valid&&alert(JSON.stringify(this.model))}}const o={examples:[{title:"Hide fields with `@angular/animations`",component:e,files:[{file:"app.component.html",content:a("UMPM"),filecontent:a("GHF8")},{file:"app.component.ts",content:a("r7Ky"),filecontent:a("zNla")},{file:"animation-wrapper.component.ts",content:a("eMep"),filecontent:a("RtCI")},{file:"app.module.ts",content:a("EfTc"),filecontent:a("4RVN")}]}]};class p{}var i=a("n91+"),r=a("aUi8"),m=a("xRU+"),c=a("l9Gt"),d=a("tb2p"),u=a("5swT"),f=a("rGUg"),y=a("qEw3"),h=a("KL5v"),g=a("WPgD"),j=a("wR1y"),b=a("B/Is"),w=a("s/Ys");Object(w.trigger)("slideInOut",[Object(w.state)("in",Object(w.style)({"max-height":"500px",opacity:"1",visibility:"visible"})),Object(w.state)("out",Object(w.style)({"max-height":"0px",opacity:"0",visibility:"hidden"})),Object(w.transition)("in => out",[Object(w.group)([Object(w.animate)("400ms ease-in-out",Object(w.style)({opacity:"0"})),Object(w.animate)("600ms ease-in-out",Object(w.style)({"max-height":"0px"})),Object(w.animate)("700ms ease-in-out",Object(w.style)({visibility:"hidden"}))])]),Object(w.transition)("out => in",[Object(w.group)([Object(w.animate)("1ms ease-in-out",Object(w.style)({visibility:"visible"})),Object(w.animate)("600ms ease-in-out",Object(w.style)({"max-height":"500px"})),Object(w.animate)("800ms ease-in-out",Object(w.style)({opacity:"1"}))])])]);class v extends b.c{}var x=l["\u0275crt"]({encapsulation:2,styles:[],data:{animation:[{type:7,name:"slideInOut",definitions:[{type:0,name:"in",styles:{type:6,styles:{"max-height":"500px",opacity:"1",visibility:"visible"},offset:null},options:void 0},{type:0,name:"out",styles:{type:6,styles:{"max-height":"0px",opacity:"0",visibility:"hidden"},offset:null},options:void 0},{type:1,expr:"in => out",animation:[{type:3,steps:[{type:4,styles:{type:6,styles:{opacity:"0"},offset:null},timings:"400ms ease-in-out"},{type:4,styles:{type:6,styles:{"max-height":"0px"},offset:null},timings:"600ms ease-in-out"},{type:4,styles:{type:6,styles:{visibility:"hidden"},offset:null},timings:"700ms ease-in-out"}],options:null}],options:null},{type:1,expr:"out => in",animation:[{type:3,steps:[{type:4,styles:{type:6,styles:{visibility:"visible"},offset:null},timings:"1ms ease-in-out"},{type:4,styles:{type:6,styles:{"max-height":"500px"},offset:null},timings:"600ms ease-in-out"},{type:4,styles:{type:6,styles:{opacity:"1"},offset:null},timings:"800ms ease-in-out"}],options:null}],options:null}],options:{}}]}});function k(n){return l["\u0275vid"](0,[l["\u0275qud"](402653184,1,{fieldComponent:0}),(n()(),l["\u0275eld"](1,0,null,null,1,"div",[],[[24,"@slideInOut",0]],null,null,null,null)),(n()(),l["\u0275eld"](2,16777216,[[1,3],["fieldComponent",1]],null,0,null,null,null,null,null,null,null))],null,(function(n,s){n(s,1,0,s.component.field.hide?"out":"in")}))}function C(n){return l["\u0275vid"](0,[(n()(),l["\u0275eld"](0,0,null,null,1,"formly-wrapper-animation",[],null,null,null,k,x)),l["\u0275did"](1,49152,null,0,v,[],null,null)],null,null)}var F=l["\u0275ccf"]("formly-wrapper-animation",v,C,{field:"field"},{},[]),O=a("fYis"),M=a("mSm0"),N=a("g/x9"),_=a("Ea/l"),R=a("kY9M"),S=a("cXvR"),A=l["\u0275crt"]({encapsulation:0,styles:["formly-field {\n        display: block !important;\n      }"],data:{}});function I(n){return l["\u0275vid"](0,[(n()(),l["\u0275eld"](0,0,null,null,9,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],(function(n,s,a){var t=!0,e=n.component;return"submit"===s&&(t=!1!==l["\u0275nov"](n,2).onSubmit(a)&&t),"reset"===s&&(t=!1!==l["\u0275nov"](n,2).onReset()&&t),"ngSubmit"===s&&(t=!1!==e.submit()&&t),t}),null,null)),l["\u0275did"](1,16384,null,0,t["\u0275angular_packages_forms_forms_z"],[],null,null),l["\u0275did"](2,540672,null,0,t.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),l["\u0275prd"](2048,null,t.ControlContainer,null,[t.FormGroupDirective]),l["\u0275did"](4,16384,null,0,t.NgControlStatusGroup,[[4,t.ControlContainer]],null,null),(n()(),l["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,N.b,N.a)),l["\u0275prd"](512,null,_.a,_.a,[R.b,l.ComponentFactoryResolver,l.Injector,[2,t.FormGroupDirective]]),l["\u0275did"](7,966656,null,0,S.a,[_.a,R.b],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),l["\u0275eld"](8,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),l["\u0275ted"](-1,null,["Submit"]))],(function(n,s){var a=s.component;n(s,2,0,a.form),n(s,7,0,a.form,a.model,a.fields,a.options)}),(function(n,s){n(s,0,0,l["\u0275nov"](s,4).ngClassUntouched,l["\u0275nov"](s,4).ngClassTouched,l["\u0275nov"](s,4).ngClassPristine,l["\u0275nov"](s,4).ngClassDirty,l["\u0275nov"](s,4).ngClassValid,l["\u0275nov"](s,4).ngClassInvalid,l["\u0275nov"](s,4).ngClassPending)}))}function W(n){return l["\u0275vid"](0,[(n()(),l["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,I,A)),l["\u0275did"](1,49152,null,0,e,[],null,null)],null,null)}var G=l["\u0275ccf"]("formly-app-example",e,W,{},{},[]),L=a("vk2e"),E=a("o3+a"),P=a("9b0e"),T=a("6YJn"),U=a("dvHj"),D=a("C0xW"),J=a("W9sv"),K=a("m6lo"),B=a("S6Ld"),V=a("cTZo"),Y=a("Kfqh"),q=a("Ienz"),z=a("KuLc"),H=a("Z7++"),X=a("2lML"),Z=a("pgVP"),Q=a("pk7F"),$=a("T8+l"),nn=a("0hby"),sn=a("tVba"),an=a("XX7/"),ln=a("pLrJ"),tn=a("U5/R"),en=a("TqxR"),on=a("soK0"),pn=a("1k+g"),rn=a("pAed"),mn=a("VtvF");function cn(n){n.wrappers&&n.wrappers.includes("animation")||(n.wrappers=["animation",...n.wrappers||[]])}class dn{}var un=a("lN7U"),fn=a("NPi3"),yn=a("PCNd"),hn=a("WCiw"),gn=a("Vtge"),jn=a("+5Wd"),bn=a("+R4m"),wn=a("SSYk"),vn=a("KJU8"),xn=a("eTA3"),kn=a("o12O"),Cn=a("iWYX"),Fn=a("h18T"),On=a("qk26"),Mn=a("P+xK");a.d(s,"ConfigModuleNgFactory",(function(){return Nn}));var Nn=l["\u0275cmf"](p,[],(function(n){return l["\u0275mod"]([l["\u0275mpd"](512,l.ComponentFactoryResolver,l["\u0275CodegenComponentFactoryResolver"],[[8,[i.a,r.a,m.a,c.a,d.a,u.a,f.a,y.a,h.a,g.a,j.a,F,O.a,M.a,G]],[3,l.ComponentFactoryResolver],l.NgModuleRef]),l["\u0275mpd"](4608,L.NgLocalization,L.NgLocaleLocalization,[l.LOCALE_ID,[2,L["\u0275angular_packages_common_common_a"]]]),l["\u0275mpd"](4608,E.c,E.c,[]),l["\u0275mpd"](4608,P.c,P.c,[P.i,P.e,l.ComponentFactoryResolver,P.h,P.f,l.Injector,l.NgZone,L.DOCUMENT,T.b,[2,L.Location]]),l["\u0275mpd"](5120,P.j,P.k,[P.c]),l["\u0275mpd"](5120,U.b,U.c,[P.c]),l["\u0275mpd"](4608,D.e,J.c,[[2,J.g],[2,J.l]]),l["\u0275mpd"](5120,K.c,K.j,[P.c]),l["\u0275mpd"](4608,B.a,B.a,[]),l["\u0275mpd"](4608,V.a,V.a,[]),l["\u0275mpd"](4608,t.FormBuilder,t.FormBuilder,[]),l["\u0275mpd"](4608,t["\u0275angular_packages_forms_forms_o"],t["\u0275angular_packages_forms_forms_o"],[]),l["\u0275mpd"](4608,_.a,_.a,[R.b,l.ComponentFactoryResolver,l.Injector,[2,t.FormGroupDirective]]),l["\u0275mpd"](1073742336,L.CommonModule,L.CommonModule,[]),l["\u0275mpd"](1073742336,Y.b,Y.b,[]),l["\u0275mpd"](1073742336,E.d,E.d,[]),l["\u0275mpd"](1073742336,q.a,q.a,[]),l["\u0275mpd"](1073742336,T.a,T.a,[]),l["\u0275mpd"](1073742336,z.g,z.g,[]),l["\u0275mpd"](1073742336,H.ScrollingModule,H.ScrollingModule,[]),l["\u0275mpd"](1073742336,P.g,P.g,[]),l["\u0275mpd"](1073742336,J.l,J.l,[[2,J.d],[2,D.f]]),l["\u0275mpd"](1073742336,U.e,U.e,[]),l["\u0275mpd"](1073742336,J.v,J.v,[]),l["\u0275mpd"](1073742336,X.j,X.j,[]),l["\u0275mpd"](1073742336,K.i,K.i,[]),l["\u0275mpd"](1073742336,K.f,K.f,[]),l["\u0275mpd"](1073742336,Z.c,Z.c,[]),l["\u0275mpd"](1073742336,Q.c,Q.c,[]),l["\u0275mpd"](1073742336,$.b,$.b,[]),l["\u0275mpd"](512,R.b,R.b,[]),l["\u0275mpd"](1024,R.a,(function(n){return[{wrappers:[{name:"form-field",component:nn.a}]},{types:[{name:"input",component:sn.a,wrappers:["form-field"]}]},{types:[{name:"textarea",component:an.a,wrappers:["form-field"]}]},{types:[{name:"radio",component:ln.a,wrappers:["form-field"]}]},{types:[{name:"checkbox",component:tn.a,wrappers:["form-field"]}]},{types:[{name:"multicheckbox",component:en.a,wrappers:["form-field"]}]},{types:[{name:"select",component:on.a,wrappers:["form-field"]}]},{wrappers:[{name:"addons",component:pn.a}],extensions:[{name:"addons",extension:{postPopulate:rn.a}}]},mn.b(n),{wrappers:[{name:"animation",component:v}],extensions:[{name:"animation",extension:{onPopulate:cn}}]}]}),[R.b]),l["\u0275mpd"](1073742336,mn.a,mn.a,[R.b,[2,R.a]]),l["\u0275mpd"](1073742336,un.h,un.h,[]),l["\u0275mpd"](1073742336,fn.b,fn.b,[]),l["\u0275mpd"](1073742336,yn.a,yn.a,[]),l["\u0275mpd"](1073742336,t["\u0275angular_packages_forms_forms_d"],t["\u0275angular_packages_forms_forms_d"],[]),l["\u0275mpd"](1073742336,t.ReactiveFormsModule,t.ReactiveFormsModule,[]),l["\u0275mpd"](1073742336,hn.a,hn.a,[]),l["\u0275mpd"](1073742336,gn.a,gn.a,[]),l["\u0275mpd"](1073742336,jn.a,jn.a,[]),l["\u0275mpd"](1073742336,bn.a,bn.a,[]),l["\u0275mpd"](1073742336,wn.a,wn.a,[]),l["\u0275mpd"](1073742336,vn.a,vn.a,[]),l["\u0275mpd"](1073742336,xn.a,xn.a,[]),l["\u0275mpd"](1073742336,kn.a,kn.a,[]),l["\u0275mpd"](1073742336,Cn.a,Cn.a,[]),l["\u0275mpd"](1073742336,Fn.a,Fn.a,[]),l["\u0275mpd"](1073742336,dn,dn,[]),l["\u0275mpd"](1073742336,On.t,On.t,[[2,On.y],[2,On.p]]),l["\u0275mpd"](1073742336,p,p,[]),l["\u0275mpd"](1024,On.n,(function(){return[[{path:"",component:Mn.a,data:o}]]}),[])])}))},r7Ky:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  <span class="hljs-comment">// formly-form: disable default hide behavior</span>\n  styles: [\n    <span class="hljs-string">`\n      ::ng-deep formly-field {\n        display: block !important;\n      }\n    `</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'firstName\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'First name\'</span>,\n        placeholder: <span class="hljs-string">\'Type in here to display the hidden field using slideInOut animation\'</span>,\n      },\n    },\n    {\n      key: <span class="hljs-string">\'lastname\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n      hideExpression: <span class="hljs-function"><span class="hljs-params">model</span> =&gt;</span> !<span class="hljs-keyword">this</span>.model.firstName,\n      templateOptions: {\n        label: <span class="hljs-string">\'Last name\'</span>,\n      },\n    },\n  ];\n\n  submit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.form.valid) {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n    }\n  }\n}\n'},zNla:function(n,s,a){"use strict";a.r(s),s.default="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n  // formly-form: disable default hide behavior\n  styles: [\n    `\n      ::ng-deep formly-field {\n        display: block !important;\n      }\n    `,\n  ],\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'firstName',\n      type: 'input',\n      templateOptions: {\n        label: 'First name',\n        placeholder: 'Type in here to display the hidden field using slideInOut animation',\n      },\n    },\n    {\n      key: 'lastname',\n      type: 'input',\n      hideExpression: model => !this.model.firstName,\n      templateOptions: {\n        label: 'Last name',\n      },\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"}}]);